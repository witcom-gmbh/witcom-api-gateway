swagger: '2.0'
info:
  title: UAC
  description: |-
    Manage MCP: Users, Security, System settings. 
    Users, Tenants, Roles, Password Policies, Configure Login/Logout, Partitions, Radius, Resources and Permissions, Partitions, Tokens, Sessions, LDAP, Authentication
  version: '1'
paths:
  /api/v1/api-keys:
    get:
      operationId: api-keys_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/APIKeyPairSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: owner
          required: false
          in: query
          description: ''
          type: string
        - name: keyId
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all api-keys.
      summary: List of all api-keys.
      tags:
        - api-keys
    post:
      operationId: api-keys_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/APIKeyPairSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: owner
          required: true
          in: formData
          description: User UUID
          type: string
      description: Create a new api-key.
      summary: Create a new api-key.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - api-keys
  /api/v1/api-keys/{keyId}:
    get:
      operationId: api-keys_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/APIKeyPairSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: keyId
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific api-key.
      summary: Get a specific api-key.
      tags:
        - api-keys
    delete:
      operationId: api-keys_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: keyId
          required: true
          in: path
          description: ''
          type: string
      description: Delete an api-key.
      summary: Delete an api-key.
      tags:
        - api-keys
  /api/v1/applications:
    get:
      operationId: applications_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: displayName
          required: false
          in: query
          description: ''
          type: string
        - name: isInternal
          required: false
          in: query
          description: ''
          type: string
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all applications.
      summary: List of all applications.
      tags:
        - applications
    post:
      operationId: applications_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApplicationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: username
          required: false
          in: formData
          description: username for Application manager, <appname>Manager if not provided
          type: string
        - name: isInternal
          required: false
          in: formData
          description: Is internal Application
          type: boolean
        - name: name
          required: true
          in: formData
          description: Application name
          type: string
      description: Create a new application entry.
      summary: Create a new application entry.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - applications
  /api/v1/applications/{uuid}:
    get:
      operationId: applications_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific application by UUID.
      summary: Get a specific application by UUID.
      tags:
        - applications
    put:
      operationId: applications_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: username
          required: false
          in: formData
          description: username for Application manager, <appname>Manager if not provided
          type: string
        - name: isInternal
          required: false
          in: formData
          description: Is internal Application
          type: boolean
        - name: name
          required: true
          in: formData
          description: Application name
          type: string
      description: Replace the application with this UUID.
      summary: Replace the application with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - applications
    patch:
      operationId: applications_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: username
          required: false
          in: formData
          description: username for Application manager, <appname>Manager if not provided
          type: string
        - name: isInternal
          required: false
          in: formData
          description: Is internal Application
          type: boolean
        - name: name
          required: false
          in: formData
          description: Application name
          type: string
      description: Update some values for the application with this UUID.
      summary: Update some values for the application with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - applications
    delete:
      operationId: applications_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Delete an application.
      summary: Delete an application.
      tags:
        - applications
  /api/v1/auth:
    post:
      operationId: auth_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AuthSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: authType
          required: true
          in: formData
          description: Authentication Type, rest of the parameters depend on this
          type: string
        - name: username
          required: false
          in: formData
          description: required for authType password
          type: string
        - name: password
          required: false
          in: formData
          description: required for authType password
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant Name required for authType password
          type: string
        - name: token
          required: false
          in: formData
          description: Required for authType token
          type: string
        - name: keyId
          required: false
          in: formData
          description: Required for authType mac
          type: string
        - name: apps
          required: false
          in: formData
          description: list of Application names, request roles for these Applications. If empty, user roles are not returned for any Application
          type: string
      description: Create a new authentication.
      summary: Create a new authentication.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - auth
  /api/v1/current-user:
    get:
      operationId: current-user_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: Detailed information about the current user.
      summary: Detailed information about the current user.
      tags:
        - current-user
  /api/v1/current-user/login_info:
    get:
      operationId: current-user_login_info
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CurrentUserLoginInfoSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters: []
      description: Returns SessionId and Token Info including tenant_context for the current user.
      summary: Returns SessionId and Token Info including tenant_context for the current user.
      tags:
        - current-user
  /api/v1/health-check:
    get:
      operationId: health-check_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HealthCheckSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: |-
        Health check
        Return 200 if things look good, or 503 if we can't talk to the DB.
      summary: Health check
      tags:
        - health-check
  /api/v1/ldap-configs:
    get:
      operationId: ldap-configs_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LDAPConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all LDAP configurations.
      summary: List of all LDAP configurations.
      tags:
        - ldap-configs
  /api/v1/ldap-configs/{uuid}:
    get:
      operationId: ldap-configs_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LDAPConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific LDAP config by UUID.
      summary: Get a specific LDAP config by UUID.
      tags:
        - ldap-configs
    put:
      operationId: ldap-configs_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LDAPConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: description
          required: false
          in: formData
          description: LDAP config description
          type: string
        - name: name
          required: true
          in: formData
          description: LDAP config name
          type: string
        - name: enabled
          required: false
          in: formData
          description: Activate this LDAP Configuration, if false, configuration exists in database but will not be used
          type: boolean
        - name: server_ip
          required: false
          in: formData
          description: Server address
          type: string
        - name: enable_ssl
          required: false
          in: formData
          description: ''
          type: boolean
        - name: ssl_level
          required: false
          in: formData
          description: SSL security level (NEVER, ALLOW, DEMAND)
          type: string
        - name: domain_search_user
          required: false
          in: formData
          description: 'LDAP username to perform user lookups. Example: user@domain.com'
          type: string
        - name: domain_search_password
          required: false
          in: formData
          description: Password for domain search user
          type: string
        - name: enable_referrals
          required: false
          in: formData
          description: Microsoft AD needs this to be disabled. (Anonymous bind is not supported)
          type: boolean
        - name: base_dn
          required: false
          in: formData
          description: ''
          type: string
        - name: user_name_attribute
          required: false
          in: formData
          description: Attribute to load user name
          type: string
        - name: tenant_attribute
          required: false
          in: formData
          description: Tenant attribute to filter user
          type: string
        - name: accessible_tenants_attribute
          required: false
          in: formData
          description: Attribute to define multiple tenant access for this user
          type: string
        - name: group_name_attribute
          required: false
          in: formData
          description: Attribute to load group name
          type: string
        - name: group_object_filter
          required: true
          in: formData
          description: Filter when searching group
          type: string
        - name: member_attr
          required: false
          in: formData
          description: '''member_attr'' used for ''group_object_filter'', e.g. set ''memberUid'' for ''(objectClass=posixGroup)'', ''member'' for ''(objectClass=groupOfNames)'', ''uniqueMember'' for ''(objectClass=GroupOfUniqueNames)'' when using OpenLDAP; ''member'' for ''(objectClass=group)'' when using Microsoft AD.'
          type: string
        - name: role_map
          required: false
          in: formData
          description: Dictionary string that maps LDAP groups/roles to a list of tron roles
          type: string
      description: Replace the LDAP config with this UUID.
      summary: Replace the LDAP config with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - ldap-configs
    patch:
      operationId: ldap-configs_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LDAPConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: description
          required: false
          in: formData
          description: LDAP config description
          type: string
        - name: name
          required: false
          in: formData
          description: LDAP config name
          type: string
        - name: enabled
          required: false
          in: formData
          description: Activate this LDAP Configuration, if false, configuration exists in database but will not be used
          type: boolean
        - name: server_ip
          required: false
          in: formData
          description: Server address
          type: string
        - name: enable_ssl
          required: false
          in: formData
          description: ''
          type: boolean
        - name: ssl_level
          required: false
          in: formData
          description: SSL security level (NEVER, ALLOW, DEMAND)
          type: string
        - name: domain_search_user
          required: false
          in: formData
          description: 'LDAP username to perform user lookups. Example: user@domain.com'
          type: string
        - name: domain_search_password
          required: false
          in: formData
          description: Password for domain search user
          type: string
        - name: enable_referrals
          required: false
          in: formData
          description: Microsoft AD needs this to be disabled. (Anonymous bind is not supported)
          type: boolean
        - name: base_dn
          required: false
          in: formData
          description: ''
          type: string
        - name: user_name_attribute
          required: false
          in: formData
          description: Attribute to load user name
          type: string
        - name: tenant_attribute
          required: false
          in: formData
          description: Tenant attribute to filter user
          type: string
        - name: accessible_tenants_attribute
          required: false
          in: formData
          description: Attribute to define multiple tenant access for this user
          type: string
        - name: group_name_attribute
          required: false
          in: formData
          description: Attribute to load group name
          type: string
        - name: group_object_filter
          required: false
          in: formData
          description: Filter when searching group
          type: string
        - name: member_attr
          required: false
          in: formData
          description: '''member_attr'' used for ''group_object_filter'', e.g. set ''memberUid'' for ''(objectClass=posixGroup)'', ''member'' for ''(objectClass=groupOfNames)'', ''uniqueMember'' for ''(objectClass=GroupOfUniqueNames)'' when using OpenLDAP; ''member'' for ''(objectClass=group)'' when using Microsoft AD.'
          type: string
        - name: role_map
          required: false
          in: formData
          description: Dictionary string that maps LDAP groups/roles to a list of tron roles
          type: string
      description: Update some values for the LDAP config with this UUID.
      summary: Update some values for the LDAP config with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - ldap-configs
  /api/v1/login-detail:
    get:
      operationId: login-detail_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginDetailSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: user_uuid
          required: false
          in: query
          description: ''
          type: string
        - name: is_successful
          required: false
          in: query
          description: ''
          type: string
        - name: user
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: |-
        Lists the login details associated user's last sessions. For admins/sysadmins,
        it lists details for all the users in that tenant
      summary: Lists the login details associated user's last sessions. For admins/sysadmins,
      tags:
        - login-detail
  /api/v1/login-info:
    get:
      operationId: login-info_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginInfoSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: Login Info.
      summary: Login Info.
      tags:
        - login-info
  /api/v1/login-message:
    get:
      operationId: login-message_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginMessageSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: Get the one and only pre-login message.
      summary: Get the one and only pre-login message.
      tags:
        - login-message
  /api/v1/login-message/{uuid}:
    get:
      operationId: login-message_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginMessageSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get the one and only pre-login message.
      summary: Get the one and only pre-login message.
      tags:
        - login-message
    put:
      operationId: login-message_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginMessageSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: message
          required: true
          in: formData
          description: ''
          type: string
      description: Replace the permission with this UUID.
      summary: Replace the permission with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - login-message
    patch:
      operationId: login-message_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginMessageSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: message
          required: false
          in: formData
          description: ''
          type: string
      description: Update some values for the permission with this UUID.
      summary: Update some values for the permission with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - login-message
  /api/v1/logout:
    post:
      operationId: logout_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Serializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters: []
      description: |-
        API endpoint for ui app users to logout.

        Expects authorization and csrftoken
        cookies, also X-CSRFToken header
      summary: API endpoint for ui app users to logout.
      tags:
        - logout
  /api/v1/notification-config:
    get:
      operationId: notification-config_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: Get the Tron notification configuration.
      summary: Get the Tron notification configuration.
      tags:
        - notification-config
  /api/v1/notification-config/{uuid}:
    get:
      operationId: notification-config_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get the Tron notification configuration.
      summary: Get the Tron notification configuration.
      tags:
        - notification-config
    put:
      operationId: notification-config_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: enabled
          required: false
          in: formData
          description: Whether email support is enabled
          type: boolean
        - name: emailLinkServer
          required: false
          in: formData
          description: Hostname/IP to use in links in email alerts (Reset password and first time account setup emails)
          type: string
        - name: resetLinkPath
          required: false
          in: formData
          description: Path on server of reset password page - for example, uac/#/set-password for the uac-ui app.Don't change this field unless you really know what you're doing.
          type: string
        - name: confirmLinkPath
          required: false
          in: formData
          description: Path on server of confirm email page - for example, uac/#/confirm-email for the uac-ui app.Don't change this field unless you really know what you're doing.
          type: string
      description: Update the Tron notification configuration.
      summary: Update the Tron notification configuration.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - notification-config
    patch:
      operationId: notification-config_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: enabled
          required: false
          in: formData
          description: Whether email support is enabled
          type: boolean
        - name: emailLinkServer
          required: false
          in: formData
          description: Hostname/IP to use in links in email alerts (Reset password and first time account setup emails)
          type: string
        - name: resetLinkPath
          required: false
          in: formData
          description: Path on server of reset password page - for example, uac/#/set-password for the uac-ui app.Don't change this field unless you really know what you're doing.
          type: string
        - name: confirmLinkPath
          required: false
          in: formData
          description: Path on server of confirm email page - for example, uac/#/confirm-email for the uac-ui app.Don't change this field unless you really know what you're doing.
          type: string
      description: Update certain fields of the Tron notification configuration.
      summary: Update certain fields of the Tron notification configuration.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - notification-config
  /api/v1/oauth2/tokens:
    post:
      operationId: oauth2_tokens_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OAuth2TokenSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: username
          required: true
          in: formData
          description: Request token for user with username
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant name of user
          type: string
        - name: tenant_context
          required: false
          in: formData
          description: Tenant name, request token for this tenant, applicable only if user can access multiple tenants
          type: string
        - name: password
          required: true
          in: formData
          description: Password for user
          type: string
        - name: expires_in
          required: false
          in: formData
          description: Token expires in timeout seconds from created time
          type: integer
        - name: grant_type
          required: true
          in: formData
          description: Accepted value is "password"
          type: string
        - name: inactive_expiration_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_successful
          required: false
          in: formData
          description: Deprecated. Only successfull logins are stored.
          type: string
        - name: user_tenant_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: radius_state
          required: false
          in: formData
          description: Represents the Access-Challenge State attribute
          type: string
      description: Create an OAuth2 Token.
      summary: Create an OAuth2 Token.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - oauth2
  /api/v1/oauth2/tokens/{token}:
    delete:
      operationId: oauth2_tokens_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: path
          description: ''
          type: string
      description: Delete an OAuth2 token.
      summary: Delete an OAuth2 token.
      tags:
        - oauth2
  /api/v1/oauth2/tokens/{token}/change_tenant_context:
    post:
      operationId: oauth2_tokens_change_tenant_context
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OAuth2TokenSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: path
          description: ''
          type: string
        - name: username
          required: true
          in: formData
          description: Request token for user with username
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant name of user
          type: string
        - name: tenant_context
          required: false
          in: formData
          description: Tenant name, request token for this tenant, applicable only if user can access multiple tenants
          type: string
        - name: password
          required: true
          in: formData
          description: Password for user
          type: string
        - name: expires_in
          required: false
          in: formData
          description: Token expires in timeout seconds from created time
          type: integer
        - name: grant_type
          required: true
          in: formData
          description: Accepted value is "password"
          type: string
        - name: inactive_expiration_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_successful
          required: false
          in: formData
          description: Deprecated. Only successfull logins are stored.
          type: string
        - name: user_tenant_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: radius_state
          required: false
          in: formData
          description: Represents the Access-Challenge State attribute
          type: string
      description: Change to the tenant context specified via tenant_context.
      summary: Change to the tenant context specified via tenant_context.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - oauth2
  /api/v1/partitions:
    get:
      operationId: partitions_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartitionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: displayName
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__contains
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: is_active
          required: false
          in: query
          description: ''
          type: string
        - name: search
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all partitions.
      summary: List of all partitions.
      tags:
        - partitions
    post:
      operationId: partitions_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PartitionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this partition should be treated as active.
          type: boolean
        - name: name
          required: true
          in: formData
          description: Partition name
          type: string
      description: Create a new partition.
      summary: Create a new partition.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - partitions
  /api/v1/partitions/{uuid}:
    get:
      operationId: partitions_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartitionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific partition by UUID.
      summary: Get a specific partition by UUID.
      tags:
        - partitions
    put:
      operationId: partitions_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartitionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this partition should be treated as active.
          type: boolean
        - name: name
          required: true
          in: formData
          description: Partition name
          type: string
      description: Replace the partition with this UUID.
      summary: Replace the partition with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - partitions
    patch:
      operationId: partitions_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartitionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this partition should be treated as active.
          type: boolean
        - name: name
          required: false
          in: formData
          description: Partition name
          type: string
      description: Update some values for the partition with this UUID.
      summary: Update some values for the partition with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - partitions
    delete:
      operationId: partitions_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Delete the partition with this UUID.
      summary: Delete the partition with this UUID.
      tags:
        - partitions
  /api/v1/passwordpolicies:
    get:
      operationId: passwordpolicies_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPolicySerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: description
          required: false
          in: query
          description: ''
          type: string
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: enable_lockout
          required: false
          in: query
          description: ''
          type: string
        - name: history_size
          required: false
          in: query
          description: ''
          type: string
        - name: allow_common_passwords
          required: false
          in: query
          description: ''
          type: string
        - name: allow_dictionary_words
          required: false
          in: query
          description: ''
          type: string
        - name: lockout_non_changed_days
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_change_days
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_digits
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_distance
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_lowercase
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_password_length
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_special_chars
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_strength
          required: false
          in: query
          description: ''
          type: string
        - name: minimum_uppercase
          required: false
          in: query
          description: ''
          type: string
        - name: password_change_days
          required: false
          in: query
          description: ''
          type: string
        - name: require_periodic_change
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all password policies.
      summary: List of all password policies.
      tags:
        - passwordpolicies
    post:
      operationId: passwordpolicies_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PasswordPolicySerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: tenant
          required: false
          in: formData
          description: Tenant UUID, if not provided "master" tenant is used
          type: string
        - name: description
          required: false
          in: formData
          description: Password policy description
          type: string
        - name: password_expiration_warning_period
          required: false
          in: formData
          description: Number of days before the password expires to provide notifications.
          type: integer
        - name: email_password_expiration_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before password expires to send emails. One email sent per week.
          type: integer
        - name: email_password_expiration_daily_notifications
          required: false
          in: formData
          description: Number of days before password expires to send emails. One email sent per day.
          type: integer
        - name: enable_lockout
          required: false
          in: formData
          description: ''
          type: boolean
        - name: failed_login_attempts
          required: false
          in: formData
          description: ''
          type: integer
        - name: history_size
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_duration_minutes
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_non_changed_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_digits
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_lowercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_password_length
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_special_chars
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_uppercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: password_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: require_periodic_change
          required: false
          in: formData
          description: ''
          type: boolean
        - name: name
          required: true
          in: formData
          description: Policy name
          type: string
      description: Create a new password policy.
      summary: Create a new password policy.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - passwordpolicies
  /api/v1/passwordpolicies/{uuid}:
    get:
      operationId: passwordpolicies_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPolicySerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific password policy by UUID.
      summary: Get a specific password policy by UUID.
      tags:
        - passwordpolicies
    put:
      operationId: passwordpolicies_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPolicySerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant UUID, if not provided "master" tenant is used
          type: string
        - name: description
          required: false
          in: formData
          description: Password policy description
          type: string
        - name: password_expiration_warning_period
          required: false
          in: formData
          description: Number of days before the password expires to provide notifications.
          type: integer
        - name: email_password_expiration_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before password expires to send emails. One email sent per week.
          type: integer
        - name: email_password_expiration_daily_notifications
          required: false
          in: formData
          description: Number of days before password expires to send emails. One email sent per day.
          type: integer
        - name: enable_lockout
          required: false
          in: formData
          description: ''
          type: boolean
        - name: failed_login_attempts
          required: false
          in: formData
          description: ''
          type: integer
        - name: history_size
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_duration_minutes
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_non_changed_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_digits
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_lowercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_password_length
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_special_chars
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_uppercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: password_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: require_periodic_change
          required: false
          in: formData
          description: ''
          type: boolean
        - name: name
          required: true
          in: formData
          description: Policy name
          type: string
      description: Replace the password policy with this UUID.
      summary: Replace the password policy with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - passwordpolicies
    patch:
      operationId: passwordpolicies_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPolicySerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant UUID, if not provided "master" tenant is used
          type: string
        - name: description
          required: false
          in: formData
          description: Password policy description
          type: string
        - name: password_expiration_warning_period
          required: false
          in: formData
          description: Number of days before the password expires to provide notifications.
          type: integer
        - name: email_password_expiration_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before password expires to send emails. One email sent per week.
          type: integer
        - name: email_password_expiration_daily_notifications
          required: false
          in: formData
          description: Number of days before password expires to send emails. One email sent per day.
          type: integer
        - name: enable_lockout
          required: false
          in: formData
          description: ''
          type: boolean
        - name: failed_login_attempts
          required: false
          in: formData
          description: ''
          type: integer
        - name: history_size
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_duration_minutes
          required: false
          in: formData
          description: ''
          type: integer
        - name: lockout_non_changed_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_digits
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_lowercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_password_length
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_special_chars
          required: false
          in: formData
          description: ''
          type: integer
        - name: minimum_uppercase
          required: false
          in: formData
          description: ''
          type: integer
        - name: password_change_days
          required: false
          in: formData
          description: ''
          type: integer
        - name: require_periodic_change
          required: false
          in: formData
          description: ''
          type: boolean
        - name: name
          required: false
          in: formData
          description: Policy name
          type: string
      description: Update some values for the password policy with this UUID.
      summary: Update some values for the password policy with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - passwordpolicies
  /api/v1/permissions:
    get:
      operationId: permissions_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: isDefault
          required: false
          in: query
          description: ''
          type: string
        - name: customerModifiable
          required: false
          in: query
          description: ''
          type: string
        - name: category
          required: false
          in: query
          description: ''
          type: string
        - name: category__contains
          required: false
          in: query
          description: ''
          type: string
        - name: category__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: displayName
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__contains
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all permissions.
      summary: List of all permissions.
      tags:
        - permissions
    post:
      operationId: permissions_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: displayName
          required: true
          in: formData
          description: Display name, same as name if not provided
          type: string
        - name: category
          required: false
          in: formData
          description: Permission Category
          type: string
        - name: operation
          required: true
          in: formData
          description: HTTP Operation like GET/POST
          type: string
        - name: description
          required: false
          in: formData
          description: Permission Description
          type: string
        - name: standby
          required: true
          in: formData
          description: ''
          type: boolean
        - name: name
          required: true
          in: formData
          description: Permission name
          type: string
      description: Create a new permission.
      summary: Create a new permission.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - permissions
  /api/v1/permissions/{uuid}:
    get:
      operationId: permissions_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific permission by UUID.
      summary: Get a specific permission by UUID.
      tags:
        - permissions
    put:
      operationId: permissions_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: true
          in: formData
          description: Display name, same as name if not provided
          type: string
        - name: category
          required: false
          in: formData
          description: Permission Category
          type: string
        - name: operation
          required: true
          in: formData
          description: HTTP Operation like GET/POST
          type: string
        - name: description
          required: false
          in: formData
          description: Permission Description
          type: string
        - name: standby
          required: true
          in: formData
          description: ''
          type: boolean
        - name: name
          required: true
          in: formData
          description: Permission name
          type: string
      description: Defines permissions for the roles.
      summary: Defines permissions for the roles.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - permissions
    patch:
      operationId: permissions_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: Display name, same as name if not provided
          type: string
        - name: category
          required: false
          in: formData
          description: Permission Category
          type: string
        - name: operation
          required: false
          in: formData
          description: HTTP Operation like GET/POST
          type: string
        - name: description
          required: false
          in: formData
          description: Permission Description
          type: string
        - name: standby
          required: false
          in: formData
          description: ''
          type: boolean
        - name: name
          required: false
          in: formData
          description: Permission name
          type: string
      description: Defines permissions for the roles.
      summary: Defines permissions for the roles.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - permissions
    delete:
      operationId: permissions_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Defines permissions for the roles.
      summary: Defines permissions for the roles.
      tags:
        - permissions
  /api/v1/permissions/{uuid}/add_resources:
    post:
      operationId: permissions_add_resources
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: resources
          required: true
          in: formData
          description: list of resource uuids
          type: string
      description: Defines permissions for the roles.
      summary: Defines permissions for the roles.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - permissions
  /api/v1/permissions/{uuid}/remove_resources:
    post:
      operationId: permissions_remove_resources
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PermissionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: resources
          required: true
          in: formData
          description: list of resource uuids
          type: string
      description: Defines permissions for the roles.
      summary: Defines permissions for the roles.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - permissions
  /api/v1/radius-configs:
    get:
      operationId: radius-configs_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RADIUSConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all RADIUS configurations.
      summary: List of all RADIUS configurations.
      tags:
        - radius-configs
    post:
      operationId: radius-configs_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/RADIUSConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: description
          required: false
          in: formData
          description: RADIUS config description
          type: string
        - name: tenant
          required: true
          in: formData
          description: Tenant name
          type: string
        - name: server_ip
          required: true
          in: formData
          description: ''
          type: string
        - name: retries
          required: false
          in: formData
          description: ''
          type: integer
        - name: authport
          required: false
          in: formData
          description: ''
          type: integer
        - name: name
          required: true
          in: formData
          description: RADIUS config name
          type: string
        - name: enabled
          required: false
          in: formData
          description: Activate this RADIUS configuration, if false, configuration exists in database but will not be used
          type: boolean
        - name: server_secret
          required: false
          in: formData
          description: Server secret
          type: string
        - name: role_map
          required: false
          in: formData
          description: Dictionary string that maps radius group/role to tron role
          type: string
        - name: authoritative_role_source
          required: false
          in: formData
          description: True if your RADIUS keeps a list of users' roles
          type: boolean
        - name: timeout
          required: false
          in: formData
          description: Timeout in seconds for attempts to talk to the RADIUS server. Range is 1 to 60.
          type: integer
        - name: heartbeat_user
          required: false
          in: formData
          description: Heartbeat user
          type: string
        - name: heartbeat_pwd
          required: false
          in: formData
          description: Heartbeat password
          type: string
      description: Stop user from creating more than two configurations per tenant.
      summary: Stop user from creating more than two configurations per tenant.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - radius-configs
  /api/v1/radius-configs/{uuid}:
    get:
      operationId: radius-configs_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RADIUSConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific RADIUS config by UUID.
      summary: Get a specific RADIUS config by UUID.
      tags:
        - radius-configs
    put:
      operationId: radius-configs_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RADIUSConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: description
          required: false
          in: formData
          description: RADIUS config description
          type: string
        - name: tenant
          required: true
          in: formData
          description: Tenant name
          type: string
        - name: server_ip
          required: true
          in: formData
          description: ''
          type: string
        - name: retries
          required: false
          in: formData
          description: ''
          type: integer
        - name: authport
          required: false
          in: formData
          description: ''
          type: integer
        - name: name
          required: true
          in: formData
          description: RADIUS config name
          type: string
        - name: enabled
          required: false
          in: formData
          description: Activate this RADIUS configuration, if false, configuration exists in database but will not be used
          type: boolean
        - name: server_secret
          required: false
          in: formData
          description: Server secret
          type: string
        - name: role_map
          required: false
          in: formData
          description: Dictionary string that maps radius group/role to tron role
          type: string
        - name: authoritative_role_source
          required: false
          in: formData
          description: True if your RADIUS keeps a list of users' roles
          type: boolean
        - name: timeout
          required: false
          in: formData
          description: Timeout in seconds for attempts to talk to the RADIUS server. Range is 1 to 60.
          type: integer
        - name: heartbeat_user
          required: false
          in: formData
          description: Heartbeat user
          type: string
        - name: heartbeat_pwd
          required: false
          in: formData
          description: Heartbeat password
          type: string
      description: Replace the RADIUS configuration with this UUID.
      summary: Replace the RADIUS configuration with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - radius-configs
    patch:
      operationId: radius-configs_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RADIUSConfigSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: description
          required: false
          in: formData
          description: RADIUS config description
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant name
          type: string
        - name: server_ip
          required: false
          in: formData
          description: ''
          type: string
        - name: retries
          required: false
          in: formData
          description: ''
          type: integer
        - name: authport
          required: false
          in: formData
          description: ''
          type: integer
        - name: name
          required: false
          in: formData
          description: RADIUS config name
          type: string
        - name: enabled
          required: false
          in: formData
          description: Activate this RADIUS configuration, if false, configuration exists in database but will not be used
          type: boolean
        - name: server_secret
          required: false
          in: formData
          description: Server secret
          type: string
        - name: role_map
          required: false
          in: formData
          description: Dictionary string that maps radius group/role to tron role
          type: string
        - name: authoritative_role_source
          required: false
          in: formData
          description: True if your RADIUS keeps a list of users' roles
          type: boolean
        - name: timeout
          required: false
          in: formData
          description: Timeout in seconds for attempts to talk to the RADIUS server. Range is 1 to 60.
          type: integer
        - name: heartbeat_user
          required: false
          in: formData
          description: Heartbeat user
          type: string
        - name: heartbeat_pwd
          required: false
          in: formData
          description: Heartbeat password
          type: string
      description: Update some values for the RADIUS config with this UUID.
      summary: Update some values for the RADIUS config with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - radius-configs
  /api/v1/register:
    get:
      operationId: register_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RegistrationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: search
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all Pending registrations.
      summary: List of all Pending registrations.
      tags:
        - register
    post:
      operationId: register_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/RegistrationSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: first_name
          required: true
          in: formData
          description: user's first name
          type: string
        - name: last_name
          required: true
          in: formData
          description: user's last name
          type: string
        - name: email
          required: true
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant UUID of user, if not provided "master" tenant is used
          type: string
        - name: password
          required: true
          in: formData
          description: user's Password
          type: string
        - name: username
          required: true
          in: formData
          description: User's username
          type: string
      description: Create a new user.
      summary: Create a new user.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/approve_users:
    post:
      operationId: register_approve_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: registrations
          required: true
          in: formData
          description: list of registration uuids
          type: string
      description: Approve registrations for the requested registration uuids.
      summary: Approve registrations for the requested registration uuids.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/confirm_email:
    post:
      operationId: register_confirm_email
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: formData
          description: Token from the email
          type: string
      description: Endpoint to confirm a user's email.
      summary: Endpoint to confirm a user's email.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/forgot_password:
    post:
      operationId: register_forgot_password
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: email
          required: true
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant name
          type: string
      description: Endpoint to send a confirmation email link for forgotten password.
      summary: Endpoint to send a confirmation email link for forgotten password.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/reject_users:
    post:
      operationId: register_reject_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: registrations
          required: true
          in: formData
          description: list of registration uuids
          type: string
      description: Reject registrations for the requested registration uuids.
      summary: Reject registrations for the requested registration uuids.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/resend_confirmation:
    post:
      operationId: register_resend_confirmation
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: email
          required: true
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant name
          type: string
      description: Endpoint to resend a confirmation email for registered users.
      summary: Endpoint to resend a confirmation email for registered users.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/register/set_password:
    post:
      operationId: register_set_password
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: formData
          description: token from the forgot password email
          type: string
        - name: password
          required: true
          in: formData
          description: user's new password
          type: string
      description: Endpoint to accept a password for forgotten password.
      summary: Endpoint to accept a password for forgotten password.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - register
  /api/v1/resources:
    get:
      operationId: resources_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: customerModifiable
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all resources.
      summary: List of all resources.
      tags:
        - resources
    post:
      operationId: resources_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ResourceSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: resource
          required: true
          in: formData
          description: HTTP Resource like api/v1/users
          type: string
        - name: name
          required: true
          in: formData
          description: Resource name
          type: string
      description: Create a new resource.
      summary: Create a new resource.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - resources
  /api/v1/resources/{uuid}:
    get:
      operationId: resources_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific resource by UUID.
      summary: Get a specific resource by UUID.
      tags:
        - resources
    put:
      operationId: resources_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: resource
          required: true
          in: formData
          description: HTTP Resource like api/v1/users
          type: string
        - name: name
          required: true
          in: formData
          description: Resource name
          type: string
      description: Defines resources for the permission.
      summary: Defines resources for the permission.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - resources
    patch:
      operationId: resources_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: resource
          required: false
          in: formData
          description: HTTP Resource like api/v1/users
          type: string
        - name: name
          required: false
          in: formData
          description: Resource name
          type: string
      description: Defines resources for the permission.
      summary: Defines resources for the permission.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - resources
    delete:
      operationId: resources_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Defines resources for the permission.
      summary: Defines resources for the permission.
      tags:
        - resources
  /api/v1/resync:
    post:
      operationId: resync_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Serializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters: []
      description: resync
      summary: resync
      tags:
        - resync
  /api/v1/roles:
    get:
      operationId: roles_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: application__uuid
          required: false
          in: query
          description: ''
          type: string
        - name: application__name
          required: false
          in: query
          description: ''
          type: string
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: user
          required: false
          in: query
          description: ''
          type: string
        - name: application
          required: false
          in: query
          description: ''
          type: string
        - name: isInternal
          required: false
          in: query
          description: ''
          type: string
        - name: customerModifiable
          required: false
          in: query
          description: ''
          type: string
        - name: bypassDormancy
          required: false
          in: query
          description: ''
          type: string
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: displayName
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__contains
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all roles.
      summary: List of all roles.
      tags:
        - roles
    post:
      operationId: roles_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: displayName
          required: true
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: application
          required: false
          in: formData
          description: Application uuid, if not provided default "BluePlanet" app is used
          type: string
        - name: reserved_sessions
          required: false
          in: formData
          description: The maximum number of concurrent sessions per role. (0=infinity)
          type: integer
        - name: name
          required: true
          in: formData
          description: Role name
          type: string
        - name: all_partitions
          required: false
          in: formData
          description: Ignore partitions field and enable all active available partitions
          type: boolean
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Create a new role.
      summary: Create a new role.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/total_reserved_sessions:
    get:
      operationId: roles_total_reserved_sessions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters: []
      description: Return the total number of reserved sessions across all the Roles
      summary: Return the total number of reserved sessions across all the Roles
      tags:
        - roles
  /api/v1/roles/{uuid}:
    get:
      operationId: roles_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific role by UUID.
      summary: Get a specific role by UUID.
      tags:
        - roles
    put:
      operationId: roles_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: true
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: application
          required: false
          in: formData
          description: Application uuid, if not provided default "BluePlanet" app is used
          type: string
        - name: reserved_sessions
          required: false
          in: formData
          description: The maximum number of concurrent sessions per role. (0=infinity)
          type: integer
        - name: name
          required: true
          in: formData
          description: Role name
          type: string
        - name: all_partitions
          required: false
          in: formData
          description: Ignore partitions field and enable all active available partitions
          type: boolean
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Replace the role with this UUID.
      summary: Replace the role with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
    patch:
      operationId: roles_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: displayName
          required: false
          in: formData
          description: display name, same as name if not provided
          type: string
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: application
          required: false
          in: formData
          description: Application uuid, if not provided default "BluePlanet" app is used
          type: string
        - name: reserved_sessions
          required: false
          in: formData
          description: The maximum number of concurrent sessions per role. (0=infinity)
          type: integer
        - name: name
          required: false
          in: formData
          description: Role name
          type: string
        - name: all_partitions
          required: false
          in: formData
          description: Ignore partitions field and enable all active available partitions
          type: boolean
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Update some values for the role with this UUID.
      summary: Update some values for the role with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
    delete:
      operationId: roles_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Defines roles of an application.
      summary: Defines roles of an application.
      tags:
        - roles
  /api/v1/roles/{uuid}/add_parents:
    post:
      operationId: roles_add_parents
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: parents
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Add parents to this role.
      summary: Add parents to this role.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/add_partitions:
    post:
      operationId: roles_add_partitions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: partitions
          required: true
          in: formData
          description: list of partition uuids
          type: string
      description: Defines roles of an application.
      summary: Defines roles of an application.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/add_permissions:
    post:
      operationId: roles_add_permissions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: permissions
          required: true
          in: formData
          description: list of permission uuids
          type: string
      description: Defines roles of an application.
      summary: Defines roles of an application.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/add_users:
    post:
      operationId: roles_add_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: users
          required: true
          in: formData
          description: list of user uuids
          type: string
      description: Add users to this role.
      summary: Add users to this role.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/remove_parents:
    post:
      operationId: roles_remove_parents
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: parents
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Remove parents from this role.
      summary: Remove parents from this role.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/remove_partitions:
    post:
      operationId: roles_remove_partitions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: partitions
          required: true
          in: formData
          description: list of partition uuids
          type: string
      description: Defines roles of an application.
      summary: Defines roles of an application.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/remove_permissions:
    post:
      operationId: roles_remove_permissions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: permissions
          required: true
          in: formData
          description: list of permission uuids
          type: string
      description: Defines roles of an application.
      summary: Defines roles of an application.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/remove_users:
    post:
      operationId: roles_remove_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: users
          required: true
          in: formData
          description: list of user uuids
          type: string
      description: Remove users from this role.
      summary: Remove users from this role.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/roles/{uuid}/set_reserved_sessions:
    post:
      operationId: roles_set_reserved_sessions
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RoleSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: reserved_sessions
          required: true
          in: formData
          description: The maximum number of concurrent sessions per role. (0=infinity)
          type: integer
      description: Allow admin and sysadmin to change the role's reserved_sessions.
      summary: Allow admin and sysadmin to change the role's reserved_sessions.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - roles
  /api/v1/sessions:
    get:
      operationId: sessions_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: session_id
          required: false
          in: query
          description: ''
          type: string
        - name: username
          required: false
          in: query
          description: ''
          type: string
        - name: ip_address
          required: false
          in: query
          description: ''
          type: string
        - name: session_type
          required: false
          in: query
          description: ''
          type: string
        - name: username__contains
          required: false
          in: query
          description: ''
          type: string
        - name: username__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: ip_address__contains
          required: false
          in: query
          description: ''
          type: string
        - name: ip_address__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: session_type__contains
          required: false
          in: query
          description: ''
          type: string
        - name: session_type__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: search
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all sessions.
      summary: List of all sessions.
      tags:
        - sessions
  /api/v1/sessions/{session_id}:
    get:
      operationId: sessions_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: session_id
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific session.
      summary: Get a specific session.
      tags:
        - sessions
    delete:
      operationId: sessions_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: session_id
          required: true
          in: path
          description: ''
          type: string
      description: Delete a session.
      summary: Delete a session.
      tags:
        - sessions
  /api/v1/tenants:
    get:
      operationId: tenants_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: isMaster
          required: false
          in: query
          description: ''
          type: string
        - name: isActive
          required: false
          in: query
          description: ''
          type: string
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: displayName
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__contains
          required: false
          in: query
          description: ''
          type: string
        - name: displayName__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: search
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List all tenants.
      summary: List all tenants.
      tags:
        - tenants
    post:
      operationId: tenants_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: displayName
          required: false
          in: formData
          description: Tenant display name
          type: string
        - name: description
          required: false
          in: formData
          description: Tenant description
          type: string
        - name: parent
          required: true
          in: formData
          description: Parent tenant UUID
          type: string
        - name: type
          required: false
          in: formData
          description: Tenant type
          type: string
        - name: concurrent_session_max_per_tenant
          required: false
          in: formData
          description: The maximum number of concurrent sessions per tenant. (0=infinity)
          type: integer
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions for tenant users. (0=infinity)
          type: integer
        - name: email_dormancy_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before dormancy to send emails. One email sent per week.
          type: integer
        - name: email_dormancy_daily_notifications
          required: false
          in: formData
          description: Number of days before dormancy to send emails. One email sent per day.
          type: integer
        - name: name
          required: true
          in: formData
          description: Tenant name
          type: string
        - name: isActive
          required: false
          in: formData
          description: Designates whether this tenant should be treated as active. If Tenant is not active, none of its users can be authenticated
          type: boolean
        - name: message
          required: false
          in: formData
          description: Message to be displayed after the user logs-in. Can be text, html, etc..
          type: string
      description: Create a new Tenant.
      summary: Create a new Tenant.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - tenants
  /api/v1/tenants/{uuid}:
    get:
      operationId: tenants_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific tenant by UUID.
      summary: Get a specific tenant by UUID.
      tags:
        - tenants
    put:
      operationId: tenants_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: displayName
          required: false
          in: formData
          description: Tenant display name
          type: string
        - name: description
          required: false
          in: formData
          description: Tenant description
          type: string
        - name: parent
          required: true
          in: formData
          description: Parent tenant UUID
          type: string
        - name: type
          required: false
          in: formData
          description: Tenant type
          type: string
        - name: concurrent_session_max_per_tenant
          required: false
          in: formData
          description: The maximum number of concurrent sessions per tenant. (0=infinity)
          type: integer
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions for tenant users. (0=infinity)
          type: integer
        - name: email_dormancy_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before dormancy to send emails. One email sent per week.
          type: integer
        - name: email_dormancy_daily_notifications
          required: false
          in: formData
          description: Number of days before dormancy to send emails. One email sent per day.
          type: integer
        - name: name
          required: true
          in: formData
          description: Tenant name
          type: string
        - name: isActive
          required: false
          in: formData
          description: Designates whether this tenant should be treated as active. If Tenant is not active, none of its users can be authenticated
          type: boolean
        - name: message
          required: false
          in: formData
          description: Message to be displayed after the user logs-in. Can be text, html, etc..
          type: string
      description: Replace the tenant with this UUID.
      summary: Replace the tenant with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - tenants
    patch:
      operationId: tenants_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: displayName
          required: false
          in: formData
          description: Tenant display name
          type: string
        - name: description
          required: false
          in: formData
          description: Tenant description
          type: string
        - name: parent
          required: false
          in: formData
          description: Parent tenant UUID
          type: string
        - name: type
          required: false
          in: formData
          description: Tenant type
          type: string
        - name: concurrent_session_max_per_tenant
          required: false
          in: formData
          description: The maximum number of concurrent sessions per tenant. (0=infinity)
          type: integer
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions for tenant users. (0=infinity)
          type: integer
        - name: email_dormancy_weekly_notifications
          required: false
          in: formData
          description: Number of weeks before dormancy to send emails. One email sent per week.
          type: integer
        - name: email_dormancy_daily_notifications
          required: false
          in: formData
          description: Number of days before dormancy to send emails. One email sent per day.
          type: integer
        - name: name
          required: false
          in: formData
          description: Tenant name
          type: string
        - name: isActive
          required: false
          in: formData
          description: Designates whether this tenant should be treated as active. If Tenant is not active, none of its users can be authenticated
          type: boolean
        - name: message
          required: false
          in: formData
          description: Message to be displayed after the user logs-in. Can be text, html, etc..
          type: string
      description: Update some values for the tenant with this UUID.
      summary: Update some values for the tenant with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - tenants
  /api/v1/tokens:
    post:
      operationId: tokens_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TokenSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: username
          required: true
          in: formData
          description: Request token for user with username
          type: string
        - name: tenant
          required: false
          in: formData
          description: Tenant name of user
          type: string
        - name: tenant_context
          required: false
          in: formData
          description: Tenant name, request token for this tenant, applicable only if user can access multiple tenants
          type: string
        - name: password
          required: true
          in: formData
          description: Password for user
          type: string
        - name: inactive_expiration_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_successful
          required: false
          in: formData
          description: Deprecated. Only successfull logins are stored.
          type: string
        - name: timeout
          required: false
          in: formData
          description: Seconds
          type: integer
        - name: user_tenant_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: radius_state
          required: false
          in: formData
          description: Represents the Access-Challenge State attribute
          type: string
      description: Create a new base token.
      summary: Create a new base token.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - tokens
  /api/v1/tokens/{token}:
    delete:
      operationId: tokens_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: path
          description: ''
          type: string
      description: |-
        defines tokens of a user.
        used by token type of authentication against /auth api
      summary: defines tokens of a user.
      tags:
        - tokens
  /api/v1/tokens/{token}/change_tenant_context:
    post:
      operationId: tokens_change_tenant_context
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: token
          required: true
          in: path
          description: ''
          type: string
        - name: tenant_context
          required: true
          in: formData
          description: Tenant name, request token for this tenant
          type: string
      description: Change to the tenant context specified via tenant_context.
      summary: Change to the tenant context specified via tenant_context.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - tokens
  /api/v1/usergroups:
    get:
      operationId: usergroups_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: name
          required: false
          in: query
          description: ''
          type: string
        - name: user
          required: false
          in: query
          description: ''
          type: string
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: List of all UserGroups.
      summary: List of all UserGroups.
      tags:
        - usergroups
    post:
      operationId: usergroups_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: name
          required: true
          in: formData
          description: Group name
          type: string
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Create a new UserGroup.
      summary: Create a new UserGroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}:
    get:
      operationId: usergroups_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific usergroup by UUID.
      summary: Get a specific usergroup by UUID.
      tags:
        - usergroups
    put:
      operationId: usergroups_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: name
          required: true
          in: formData
          description: Group name
          type: string
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Replace the UserGroup with this UUID.
      summary: Replace the UserGroup with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
    patch:
      operationId: usergroups_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: description
          required: false
          in: formData
          description: description
          type: string
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: name
          required: false
          in: formData
          description: Group name
          type: string
        - name: parents
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
      description: Update some values for the UserGroup with this UUID.
      summary: Update some values for the UserGroup with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
    delete:
      operationId: usergroups_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: |-
        Delete a UserGroup.

        Removing/Deleting a UserGroup removes the UserGroup and updates
        recursively the parent/children UserGroup reference to it. If UserGroup
        has users associated with it, the users usergroups will be updated and
        the deleted usergroup will be removed.
      summary: Delete a UserGroup.
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/add_parents:
    post:
      operationId: usergroups_add_parents
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: parents
          required: true
          in: formData
          description: list of user group uuids
          type: string
      description: Add parent groups to this usergroup.
      summary: Add parent groups to this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/add_roles:
    post:
      operationId: usergroups_add_roles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: roles
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Add roles to this usergroup.
      summary: Add roles to this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/add_users:
    post:
      operationId: usergroups_add_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: users
          required: true
          in: formData
          description: list of user uuids
          type: string
      description: Add users to this usergroup.
      summary: Add users to this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/remove_parents:
    post:
      operationId: usergroups_remove_parents
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: parents
          required: true
          in: formData
          description: list of user group uuids
          type: string
      description: Remove parent groups from this usergroup.
      summary: Remove parent groups from this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/remove_roles:
    post:
      operationId: usergroups_remove_roles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: roles
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Remove roles from this usergroup.
      summary: Remove roles from this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/usergroups/{uuid}/remove_users:
    post:
      operationId: usergroups_remove_users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserGroupSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: users
          required: true
          in: formData
          description: list of user uuids
          type: string
      description: Remove users from this usergroup.
      summary: Remove users from this usergroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - usergroups
  /api/v1/users:
    get:
      operationId: users_list
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: uuid
          required: false
          in: query
          description: ''
          type: string
        - name: role
          required: false
          in: query
          description: ''
          type: string
        - name: usergroup
          required: false
          in: query
          description: ''
          type: string
        - name: tenant
          required: false
          in: query
          description: ''
          type: string
        - name: current_logged_in
          required: false
          in: query
          description: ''
          type: string
        - name: current_with_concurrent_session_count_greater
          required: false
          in: query
          description: ''
          type: string
        - name: is_active
          required: false
          in: query
          description: ''
          type: string
        - name: is_internal
          required: false
          in: query
          description: ''
          type: string
        - name: is_locked
          required: false
          in: query
          description: ''
          type: string
        - name: is_staff
          required: false
          in: query
          description: ''
          type: string
        - name: is_dormant
          required: false
          in: query
          description: ''
          type: string
        - name: email
          required: false
          in: query
          description: ''
          type: string
        - name: email__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: email__contains
          required: false
          in: query
          description: ''
          type: string
        - name: first_name
          required: false
          in: query
          description: ''
          type: string
        - name: first_name__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: first_name__contains
          required: false
          in: query
          description: ''
          type: string
        - name: last_name
          required: false
          in: query
          description: ''
          type: string
        - name: last_name__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: last_name__contains
          required: false
          in: query
          description: ''
          type: string
        - name: username
          required: false
          in: query
          description: ''
          type: string
        - name: username__startswith
          required: false
          in: query
          description: ''
          type: string
        - name: username__contains
          required: false
          in: query
          description: ''
          type: string
        - name: search
          required: false
          in: query
          description: ''
          type: string
        - name: ordering
          required: false
          in: query
          description: ''
          type: string
        - name: page
          required: false
          in: query
          description: ''
          type: string
        - name: limit
          required: false
          in: query
          description: ''
          type: string
      description: |-
        List of users.

        Custom Filter current_logged_in can be used to get currently logged in users,
        GET api/v1/users?current_logged_in=True
      summary: List of users.
      tags:
        - users
    post:
      operationId: users_create
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
      parameters:
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: first_name
          required: true
          in: formData
          description: user's first name
          type: string
        - name: last_name
          required: true
          in: formData
          description: user's last name
          type: string
        - name: description
          required: false
          in: formData
          description: user's description
          type: string
        - name: email
          required: false
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant UUID of user, if not provided "master" tenant is used
          type: string
        - name: accessible_tenants
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: roles
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: password
          required: false
          in: formData
          description: user's password
          type: string
        - name: password_change_required
          required: false
          in: formData
          description: Password change required
          type: boolean
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: is_verbose_logging
          required: false
          in: formData
          description: User permission for generating audit logs
          type: boolean
        - name: username
          required: true
          in: formData
          description: Required. 100 characters or fewer. Letters, numbers and @/./+/-/_ characters
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
          type: boolean
        - name: is_locked
          required: false
          in: formData
          description: Designates whether this user is locked from failed login attempts
          type: boolean
        - name: unlock_time
          required: false
          in: formData
          description: Time when this user was locked.
          type: string
        - name: init_dormancy_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_internal
          required: false
          in: formData
          description: Internal User
          type: boolean
        - name: directory
          required: false
          in: formData
          description: Indicates which directory user is from, e.g. ldap
          type: string
        - name: last_login_detail_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: failed_login_attempts
          required: false
          in: formData
          description: Failed login attempts since last successful attempt
          type: integer
      description: Create a new user.
      summary: Create a new user.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}:
    get:
      operationId: users_read
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Get a specific user by UUID.
      summary: Get a specific user by UUID.
      tags:
        - users
    put:
      operationId: users_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: first_name
          required: true
          in: formData
          description: user's first name
          type: string
        - name: last_name
          required: true
          in: formData
          description: user's last name
          type: string
        - name: description
          required: false
          in: formData
          description: user's description
          type: string
        - name: email
          required: false
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant UUID of user, if not provided "master" tenant is used
          type: string
        - name: accessible_tenants
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: roles
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: password
          required: false
          in: formData
          description: user's password
          type: string
        - name: password_change_required
          required: false
          in: formData
          description: Password change required
          type: boolean
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: is_verbose_logging
          required: false
          in: formData
          description: User permission for generating audit logs
          type: boolean
        - name: username
          required: true
          in: formData
          description: Required. 100 characters or fewer. Letters, numbers and @/./+/-/_ characters
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
          type: boolean
        - name: is_locked
          required: false
          in: formData
          description: Designates whether this user is locked from failed login attempts
          type: boolean
        - name: unlock_time
          required: false
          in: formData
          description: Time when this user was locked.
          type: string
        - name: init_dormancy_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_internal
          required: false
          in: formData
          description: Internal User
          type: boolean
        - name: directory
          required: false
          in: formData
          description: Indicates which directory user is from, e.g. ldap
          type: string
        - name: last_login_detail_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: failed_login_attempts
          required: false
          in: formData
          description: Failed login attempts since last successful attempt
          type: integer
      description: Replace the user with this UUID.
      summary: Replace the user with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
    patch:
      operationId: users_partial_update
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: client_inactivity_time
          required: false
          in: formData
          description: timeout in seconds of inactivity
          type: integer
        - name: token_expiration_time
          required: false
          in: formData
          description: token expires in timeout seconds from created time
          type: integer
        - name: dormancy_days
          required: false
          in: formData
          description: number of days before an account can become dormant
          type: integer
        - name: first_name
          required: false
          in: formData
          description: user's first name
          type: string
        - name: last_name
          required: false
          in: formData
          description: user's last name
          type: string
        - name: description
          required: false
          in: formData
          description: user's description
          type: string
        - name: email
          required: false
          in: formData
          description: user's email address
          type: string
        - name: tenant
          required: false
          in: formData
          description: tenant UUID of user, if not provided "master" tenant is used
          type: string
        - name: accessible_tenants
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: roles
          required: false
          in: formData
          description: ''
          type: array
          items:
            type: string
        - name: password
          required: false
          in: formData
          description: user's password
          type: string
        - name: password_change_required
          required: false
          in: formData
          description: Password change required
          type: boolean
        - name: concurrent_session_max
          required: false
          in: formData
          description: The maximum number of concurrent sessions. (0=infinity)
          type: integer
        - name: is_verbose_logging
          required: false
          in: formData
          description: User permission for generating audit logs
          type: boolean
        - name: username
          required: false
          in: formData
          description: Required. 100 characters or fewer. Letters, numbers and @/./+/-/_ characters
          type: string
        - name: is_active
          required: false
          in: formData
          description: Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
          type: boolean
        - name: is_locked
          required: false
          in: formData
          description: Designates whether this user is locked from failed login attempts
          type: boolean
        - name: unlock_time
          required: false
          in: formData
          description: Time when this user was locked.
          type: string
        - name: init_dormancy_time
          required: false
          in: formData
          description: ''
          type: string
        - name: is_internal
          required: false
          in: formData
          description: Internal User
          type: boolean
        - name: directory
          required: false
          in: formData
          description: Indicates which directory user is from, e.g. ldap
          type: string
        - name: last_login_detail_uuid
          required: false
          in: formData
          description: ''
          type: string
        - name: failed_login_attempts
          required: false
          in: formData
          description: Failed login attempts since last successful attempt
          type: integer
      description: Update some values for the user with this UUID.
      summary: Update some values for the user with this UUID.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
    delete:
      operationId: users_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Delete a user.
      summary: Delete a user.
      tags:
        - users
  /api/v1/users/{uuid}/add_accessible_tenants:
    post:
      operationId: users_add_accessible_tenants
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: accessible_tenants
          required: true
          in: formData
          description: list of tenant uuids
          type: string
      description: Grant this user additional accessible tenants.
      summary: Grant this user additional accessible tenants.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/add_roles:
    post:
      operationId: users_add_roles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: roles
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Grant this user additional roles.
      summary: Grant this user additional roles.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/add_usergroups:
    post:
      operationId: users_add_usergroups
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: usergroups
          required: true
          in: formData
          description: list of group uuids
          type: string
      description: Add this user to a UserGroup.
      summary: Add this user to a UserGroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/context_accessible_tenants:
    get:
      operationId: users_context_accessible_tenants
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TenantSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
      description: Return a list of all active subtenants of current tenant.
      summary: Return a list of all active subtenants of current tenant.
      tags:
        - users
  /api/v1/users/{uuid}/remove_accessible_tenants:
    post:
      operationId: users_remove_accessible_tenants
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: accessible_tenants
          required: true
          in: formData
          description: list of tenant uuids
          type: string
      description: Remove accessible tenants from this user.
      summary: Remove accessible tenants from this user.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/remove_roles:
    post:
      operationId: users_remove_roles
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: roles
          required: true
          in: formData
          description: list of role uuids
          type: string
      description: Remove roles from this user.
      summary: Remove roles from this user.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/remove_usergroups:
    post:
      operationId: users_remove_usergroups
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: usergroups
          required: true
          in: formData
          description: list of group uuids
          type: string
      description: Remove this user from a UserGroup.
      summary: Remove this user from a UserGroup.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/reset_password:
    post:
      operationId: users_reset_password
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: currentPassword
          required: false
          in: formData
          description: Not required for reset_password,required for set_password if user's password is set at least once
          type: string
        - name: newPassword
          required: true
          in: formData
          description: user's new password
          type: string
        - name: newPasswordConfirm
          required: true
          in: formData
          description: Should match newPassword
          type: string
        - name: force
          required: false
          in: formData
          description: Allow admin to skip password checks
          type: boolean
      description: |-
        "Set the given users password (ADMIN).

        Does *NOT* require the current password
      summary: '"Set the given users password (ADMIN).'
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
  /api/v1/users/{uuid}/set_password:
    post:
      operationId: users_set_password
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BaseResponseSerializer'
        '400':
          description: Bad Request
        '401':
          description: Authentication credentials were not provided
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: uuid
          required: true
          in: path
          description: ''
          type: string
        - name: currentPassword
          required: false
          in: formData
          description: Not required for reset_password,required for set_password if user's password is set at least once
          type: string
        - name: newPassword
          required: true
          in: formData
          description: user's new password
          type: string
        - name: newPasswordConfirm
          required: true
          in: formData
          description: Should match newPassword
          type: string
      description: |-
        Set the given users password.

        Requires the current password
      summary: Set the given users password.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - users
securityDefinitions:
  basic:
    type: apiKey
    in: header
    name: Authorization
definitions:
  APIKeyPairSerializer:
    type: object
    required:
      - owner
    properties:
      createdTime:
        type: string
        format: date-time
      id:
        type: integer
      keyId:
        type: string
      keySecret:
        type: string
      modifiedTime:
        type: string
        format: date-time
      owner:
        type: string
        description: User UUID
  ApplicationSerializer:
    type: object
    required:
      - name
    properties:
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: description
      displayName:
        type: string
        description: display name, same as name if not provided
      isInternal:
        type: boolean
        description: Is internal Application
      manager:
        type: string
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Application name
      uuid:
        type: string
  AuthSerializer:
    type: object
    required:
      - authType
    properties:
      apps:
        type: array
        description: list of Application names, request roles for these Applications. If empty, user roles are not returned for any Application
        items:
          type: string
          description: 'Request roles for these Applications '
      authType:
        type: string
        description: Authentication Type, rest of the parameters depend on this
      keyId:
        type: string
        description: Required for authType mac
      password:
        type: string
        description: required for authType password
      tenant:
        type: string
        description: Tenant Name required for authType password
      token:
        type: string
        description: Required for authType token
      username:
        type: string
        description: required for authType password
  UserSerializer:
    type: object
    required:
      - firstName
      - lastName
      - username
    properties:
      accessibleTenants:
        type: array
        items:
          type: string
      clientInactivityTime:
        type: integer
        description: timeout in seconds of inactivity
      concurrentSessionMax:
        type: integer
        description: The maximum number of concurrent sessions. (0=infinity)
      dateJoined:
        type: string
        format: date-time
      description:
        type: string
        description: user's description
      directory:
        type: string
        description: Indicates which directory user is from, e.g. ldap
      dormancyDays:
        type: integer
        description: number of days before an account can become dormant
      email:
        type: string
        description: user's email address
      failedLoginAttempts:
        type: integer
        description: Failed login attempts since last successful attempt
      firstName:
        type: string
        description: user's first name
      initDormancyTime:
        type: string
        format: date-time
      isActive:
        type: boolean
        description: Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
      isDormant:
        type: boolean
        description: Designates whether this user is dormant from account inactivity
      isInternal:
        type: boolean
        description: Internal User
      isLocked:
        type: boolean
        description: Designates whether this user is locked from failed login attempts
      isVerboseLogging:
        type: boolean
        description: User permission for generating audit logs
      lastLoginDetail:
        type: string
      lastLoginDetailUuid:
        type: string
      lastName:
        type: string
        description: user's last name
      passwordChangeRequired:
        type: boolean
        description: Password change required
      resolvedClientInactivityTime:
        type: string
      resolvedConcurrentSessionMax:
        type: string
      resolvedDisabledQualifiers:
        type: string
      resolvedDormancyDays:
        type: string
      resolvedTokenExpirationTime:
        type: string
      roles:
        type: array
        items:
          type: string
      tenant:
        type: string
        description: tenant UUID of user, if not provided "master" tenant is used
      tokenExpirationTime:
        type: integer
        description: token expires in timeout seconds from created time
      unlockTime:
        type: string
        description: Time when this user was locked.
        format: date-time
      usergroups:
        type: array
        items:
          type: string
      username:
        type: string
        description: Required. 100 characters or fewer. Letters, numbers and @/./+/-/_ characters
      uuid:
        type: string
  CurrentUserLoginInfoSerializer:
    type: object
    required:
      - token
      - tenantContext
      - tenantContextId
      - sessionId
    properties:
      sessionId:
        type: string
      tenantContext:
        type: string
        description: Tenant name for which this token is valid
      tenantContextId:
        type: string
        description: Tenant uuid for which this token is valid
      token:
        type: string
        description: Current Token used for Authentication
      user:
        type: string
        description: Token owner(user) UUID
  HealthCheckSerializer:
    type: object
    required:
      - databaseCount
    properties:
      databaseCount:
        type: integer
        description: Number of database back ends configured
  LDAPConfigSerializer:
    type: object
    required:
      - name
      - groupObjectFilter
    properties:
      accessibleTenantsAttribute:
        type: string
        description: Attribute to define multiple tenant access for this user
      baseDn:
        type: string
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: LDAP config description
      domainSearchUser:
        type: string
        description: 'LDAP username to perform user lookups. Example: user@domain.com'
      enableReferrals:
        type: boolean
        description: Microsoft AD needs this to be disabled. (Anonymous bind is not supported)
      enableSsl:
        type: boolean
      enabled:
        type: boolean
        description: Activate this LDAP Configuration, if false, configuration exists in database but will not be used
      groupNameAttribute:
        type: string
        description: Attribute to load group name
      groupObjectFilter:
        type: string
        description: Filter when searching group
      memberAttr:
        type: string
        description: '''member_attr'' used for ''group_object_filter'', e.g. set ''memberUid'' for ''(objectClass=posixGroup)'', ''member'' for ''(objectClass=groupOfNames)'', ''uniqueMember'' for ''(objectClass=GroupOfUniqueNames)'' when using OpenLDAP; ''member'' for ''(objectClass=group)'' when using Microsoft AD.'
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: LDAP config name
      roleMap:
        type: string
        description: Dictionary string that maps LDAP groups/roles to a list of tron roles
      serverIp:
        type: string
        description: Server address
      sslLevel:
        type: string
        description: SSL security level (NEVER, ALLOW, DEMAND)
      tenantAttribute:
        type: string
        description: Tenant attribute to filter user
      userNameAttribute:
        type: string
        description: Attribute to load user name
      uuid:
        type: string
  LoginDetailSerializer:
    type: object
    required:
      - userUuid
      - ipAddress
      - sessionId
    properties:
      ipAddress:
        type: string
      isSuccessful:
        type: boolean
      sessionId:
        type: string
      time:
        type: string
        format: date-time
      userUuid:
        type: string
  LoginInfoSerializer:
    type: object
    required:
      - tenantNumber
      - ldapEnabled
      - radiusEnabled
      - passwordResetEnabled
      - emailNotificationEnabled
    properties:
      emailNotificationEnabled:
        type: boolean
        description: Email notifications enabled/disabled
      ldapEnabled:
        type: boolean
        description: LDAP Backend enabled/disabled
      passwordResetEnabled:
        type: boolean
        description: Password Reset Feature enabled/disabled
      radiusEnabled:
        type: boolean
        description: RADIUS Backend enabled/disabled
      tenantNumber:
        type: integer
        description: Total number of tenants
  LoginMessageSerializer:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      uuid:
        type: string
  Serializer:
    type: object
  NotificationConfigSerializer:
    type: object
    properties:
      confirmLinkPath:
        type: string
        description: Path on server of confirm email page - for example, uac/#/confirm-email for the uac-ui app.Don't change this field unless you really know what you're doing.
      emailLinkServer:
        type: string
        description: Hostname/IP to use in links in email alerts (Reset password and first time account setup emails)
      enabled:
        type: boolean
        description: Whether email support is enabled
      resetLinkPath:
        type: string
        description: Path on server of reset password page - for example, uac/#/set-password for the uac-ui app.Don't change this field unless you really know what you're doing.
      uuid:
        type: string
  OAuth2TokenSerializer:
    type: object
    properties:
      accessToken:
        type: string
      createdTime:
        type: string
        format: date-time
      expirationTime:
        type: string
        format: date-time
      expiresIn:
        type: integer
        description: Token expires in timeout seconds from created time
      failedLoginAttempts:
        type: integer
      inactiveExpirationTime:
        type: string
        format: date-time
      isSuccessful:
        type: string
        description: Deprecated. Only successfull logins are stored.
      lastSuccessIpAddress:
        type: string
      lastSuccessLogin:
        type: string
#        format: date-time
      loginDetail:
        $ref: '#/definitions/TokenLoginDetailSerializer'
      radiusState:
        type: string
        description: Represents the Access-Challenge State attribute
      tokenType:
        type: string
      user:
        type: string
      userTenantUuid:
        type: string
  TokenLoginDetailSerializer:
    type: object
    properties: 
      ipAddress:
        type: string
        description: users IP-Adress 
      sessionId:
        type: string
        description: Session id 
      sessionType:
        type: string
        description: Type of session 
      time:
        type: string
        format: date-time
      userAgent:
        type: string
  PartitionSerializer:
    type: object
    required:
      - name
    properties:
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: description
      displayName:
        type: string
        description: display name, same as name if not provided
      isActive:
        type: boolean
        description: Designates whether this partition should be treated as active.
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Partition name
      uuid:
        type: string
  PasswordPolicySerializer:
    type: object
    required:
      - name
    properties:
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: Password policy description
      emailPasswordExpirationDailyNotifications:
        type: integer
        description: Number of days before password expires to send emails. One email sent per day.
      emailPasswordExpirationWeeklyNotifications:
        type: integer
        description: Number of weeks before password expires to send emails. One email sent per week.
      enableLockout:
        type: boolean
      failedLoginAttempts:
        type: integer
      historySize:
        type: integer
      lockoutDurationMinutes:
        type: integer
      lockoutNonChangedDays:
        type: integer
      minimumChangeDays:
        type: integer
      minimumDigits:
        type: integer
      minimumLowercase:
        type: integer
      minimumPasswordLength:
        type: integer
      minimumSpecialChars:
        type: integer
      minimumUppercase:
        type: integer
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Policy name
      passwordChangeDays:
        type: integer
      passwordExpirationWarningPeriod:
        type: integer
        description: Number of days before the password expires to provide notifications.
      requireDigits:
        type: string
      requireMixedCase:
        type: string
      requirePeriodicChange:
        type: boolean
      requireSpecialChars:
        type: string
      tenant:
        type: string
        description: Tenant UUID, if not provided "master" tenant is used
      uuid:
        type: string
  PermissionSerializer:
    type: object
    required:
      - displayName
      - operation
      - standby
      - name
    properties:
      category:
        type: string
        description: Permission Category
      createdTime:
        type: string
        format: date-time
      customerModifiable:
        type: boolean
        description: Can the customer modify or delete this Permission?  Used to prevent changes to default Permissions.
      description:
        type: string
        description: Permission Description
      displayName:
        type: string
        description: Display name, same as name if not provided
      isDefault:
        type: boolean
        description: Default permissions status
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Permission name
      operation:
        type: string
        description: HTTP Operation like GET/POST
      resources:
        type: array
        items:
          type: string
      resourcesAlways:
        type: array
        items:
          type: string
      resourcesConditional:
        type: array
        items:
          type: string
      resourcesNever:
        type: array
        items:
          type: string
      standby:
        type: boolean
      uuid:
        type: string
  PermissionResourcesSerializer:
    type: object
    required:
      - resources
    properties:
      resources:
        type: array
        description: list of resource uuids
        items:
          type: string
  RADIUSConfigSerializer:
    type: object
    required:
      - tenant
      - serverIp
      - name
    properties:
      authoritativeRoleSource:
        type: boolean
        description: True if your RADIUS keeps a list of users' roles
      authport:
        type: integer
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: RADIUS config description
      enabled:
        type: boolean
        description: Activate this RADIUS configuration, if false, configuration exists in database but will not be used
      heartbeatUser:
        type: string
        description: Heartbeat user
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: RADIUS config name
      retries:
        type: integer
      roleMap:
        type: string
        description: Dictionary string that maps radius group/role to tron role
      serverIp:
        type: string
      tenant:
        type: string
        description: Tenant name
      timeout:
        type: integer
        description: Timeout in seconds for attempts to talk to the RADIUS server. Range is 1 to 60.
      uuid:
        type: string
  RegistrationSerializer:
    type: object
    required:
      - firstName
      - lastName
      - email
      - username
    properties:
      email:
        type: string
        description: user's email address
      firstName:
        type: string
        description: user's first name
      lastName:
        type: string
        description: user's last name
      tenant:
        type: string
        description: tenant UUID of user, if not provided "master" tenant is used
      username:
        type: string
        description: User's username
      uuid:
        type: string
  ApproveUserSerializer:
    type: object
    required:
      - registrations
    properties:
      registrations:
        type: array
        description: list of registration uuids
        items:
          type: string
  BaseResponseSerializer:
    type: object
    required:
      - status
    properties:
      status:
        type: string
  EmailTokenSerializer:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        description: Token from the email
  EmailVerificationSerializer:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: user's email address
      tenant:
        type: string
        description: tenant name
  SetPasswordSerializer:
    type: object
    required:
      - token
      - password
    properties:
      password:
        type: string
        description: user's new password
      token:
        type: string
        description: token from the forgot password email
  ResourceSerializer:
    type: object
    required:
      - resource
      - name
    properties:
      createdTime:
        type: string
        format: date-time
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Resource name
      resource:
        type: string
        description: HTTP Resource like api/v1/users
      uuid:
        type: string
  RoleSerializer:
    type: object
    required:
      - displayName
      - name
    properties:
      allPartitions:
        type: boolean
        description: Ignore partitions field and enable all active available partitions
      application:
        type: string
        description: Application uuid, if not provided default "BluePlanet" app is used
      bypassDormancy:
        type: boolean
        description: Whether or not users with this role are exempt from the effects of dormancy.
      createdTime:
        type: string
        format: date-time
      customerModifiable:
        type: boolean
        description: Can the customer modify or delete this Role?  Used to prevent changes to default Roles.
      description:
        type: string
        description: description
      displayName:
        type: string
        description: display name, same as name if not provided
      isInternal:
        type: boolean
        description: Internal role
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Role name
      parents:
        type: array
        items:
          type: string
      partitions:
        type: array
        items:
          type: string
      permissions:
        type: array
        items:
          type: string
      reservedSessions:
        type: integer
        description: The maximum number of concurrent sessions per role. (0=infinity)
      uuid:
        type: string
  RoleParentsSerializer:
    type: object
    required:
      - parents
    properties:
      parents:
        type: array
        description: list of role uuids
        items:
          type: string
  RolePartitionSerializer:
    type: object
    required:
      - partitions
    properties:
      partitions:
        type: array
        description: list of partition uuids
        items:
          type: string
  RolePermissionsSerializer:
    type: object
    required:
      - permissions
    properties:
      permissions:
        type: array
        description: list of permission uuids
        items:
          type: string
  RoleUsersSerializer:
    type: object
    required:
      - users
    properties:
      users:
        type: array
        description: list of user uuids
        items:
          type: string
  RoleReservedSessionsSerializer:
    type: object
    required:
      - reservedSessions
    properties:
      reservedSessions:
        type: integer
        description: The maximum number of concurrent sessions per role. (0=infinity)
  SessionSerializer:
    type: object
    required:
      - sessionId
      - username
      - tenantname
      - tenantId
      - userId
      - time
      - ipAddress
      - userAgent
      - sessionType
    properties:
      ipAddress:
        type: string
      sessionId:
        type: string
      sessionType:
        type: string
      tenantId:
        type: string
      tenantname:
        type: string
      time:
        type: string
        format: date-time
      userAgent:
        type: string
      userId:
        type: string
      username:
        type: string
  TenantSerializer:
    type: object
    required:
      - parent
      - name
    properties:
      clientInactivityTime:
        type: integer
        description: timeout in seconds of inactivity
      concurrentSessionMax:
        type: integer
        description: The maximum number of concurrent sessions for tenant users. (0=infinity)
      concurrentSessionMaxPerTenant:
        type: integer
        description: The maximum number of concurrent sessions per tenant. (0=infinity)
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: Tenant description
      displayName:
        type: string
        description: Tenant display name
      dormancyDays:
        type: integer
        description: number of days before an account can become dormant
      emailDormancyDailyNotifications:
        type: integer
        description: Number of days before dormancy to send emails. One email sent per day.
      emailDormancyWeeklyNotifications:
        type: integer
        description: Number of weeks before dormancy to send emails. One email sent per week.
      isActive:
        type: boolean
        description: Designates whether this tenant should be treated as active. If Tenant is not active, none of its users can be authenticated
      isMaster:
        type: boolean
        description: Marks a tenant as Master, only one should be true
      message:
        type: string
        description: Message to be displayed after the user logs-in. Can be text, html, etc..
        format: textarea
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Tenant name
      parent:
        type: string
        description: Parent tenant UUID
      tokenExpirationTime:
        type: integer
        description: token expires in timeout seconds from created time
      type:
        type: string
        description: Tenant type
      uuid:
        type: string
  TokenSerializer:
    type: object
    properties:
      createdTime:
        type: string
        format: date-time
      failedLoginAttempts:
        type: integer
      inactiveExpirationTime:
        type: string
        format: date-time
      isSuccessful:
        type: string
        description: Deprecated. Only successfull logins are stored.
      lastSuccessIpAddress:
        type: string
      lastSuccessLogin:
        type: string
        format: date-time
      loginDetail:
        type: string
      radiusState:
        type: string
        description: Represents the Access-Challenge State attribute
      timeout:
        type: integer
        description: Seconds
      token:
        type: string
      user:
        type: string
      userTenantUuid:
        type: string
  TenantContextSerializer:
    type: object
    required:
      - tenantContext
    properties:
      tenantContext:
        type: string
        description: Tenant name, request token for this tenant
  UserGroupSerializer:
    type: object
    required:
      - name
    properties:
      clientInactivityTime:
        type: integer
        description: timeout in seconds of inactivity
      concurrentSessionMax:
        type: integer
        description: The maximum number of concurrent sessions. (0=infinity)
      createdTime:
        type: string
        format: date-time
      description:
        type: string
        description: description
      dormancyDays:
        type: integer
        description: number of days before an account can become dormant
      modifiedTime:
        type: string
        format: date-time
      name:
        type: string
        description: Group name
      parents:
        type: array
        items:
          type: string
      resolvedClientInactivityTime:
        type: string
      resolvedDormancyDays:
        type: string
      resolvedTokenExpirationTime:
        type: string
      roles:
        type: array
        items:
          type: string
      tokenExpirationTime:
        type: integer
        description: token expires in timeout seconds from created time
      uuid:
        type: string
  UserGroupParentsSerializer:
    type: object
    required:
      - parents
    properties:
      parents:
        type: array
        description: list of user group uuids
        items:
          type: string
  UserRoleSerializer:
    type: object
    required:
      - roles
    properties:
      roles:
        type: array
        description: list of role uuids
        items:
          type: string
  UserGroupUsersSerializer:
    type: object
    required:
      - users
    properties:
      users:
        type: array
        description: list of user uuids
        items:
          type: string
  UserTenantSerializer:
    type: object
    required:
      - accessibleTenants
    properties:
      accessibleTenants:
        type: array
        description: list of tenant uuids
        items:
          type: string
  UserUserGroupSerializer:
    type: object
    required:
      - usergroups
    properties:
      usergroups:
        type: array
        description: list of group uuids
        items:
          type: string
  ResetPasswordSerializer:
    type: object
    required:
      - newPassword
      - newPasswordConfirm
    properties:
      currentPassword:
        type: string
        description: Not required for reset_password,required for set_password if user's password is set at least once
      force:
        type: boolean
        description: Allow admin to skip password checks
      newPassword:
        type: string
        description: user's new password
      newPasswordConfirm:
        type: string
        description: Should match newPassword
  PasswordSerializer:
    type: object
    required:
      - newPassword
      - newPasswordConfirm
    properties:
      currentPassword:
        type: string
        description: Not required for reset_password,required for set_password if user's password is set at least once
      newPassword:
        type: string
        description: user's new password
      newPasswordConfirm:
        type: string
        description: Should match newPassword
basePath: /tron
