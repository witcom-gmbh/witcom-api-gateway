#spring.cloud.gateway.httpclient.ssl.use-insecure-trust-manager
#feign:
#  client:
#    config:
#      default:
#        logger-level: full
        
spring:
  redis:
    host: localhost
    port: 6379
    #password: bla
  cloud:
   gateway:
    gateway:
      httpclient:
        ssl:
          use-insecure-trust-manager: true
    globalcors:
      cors-configurations:
        '[/**]':
         allowedOrigins: "*"          
    routes:
#service-planet    
      - id: spl
        uri: ${SPL_BASEURL:http://localhost}/serviceplanet/remote/service
        predicates:
         - Path=/smdb/**
        filters:
#         - KeyCloakFilter=requiredRole,service_read
         - ServicePlanetFilter
         - RewritePath=/smdb/(?<segment>.*), /serviceplanet/remote/service/$\{segment}
#dsl recherche
      - id: dsl-api
        uri: https://secure.mk-netzdienste.de/kundenportal
        predicates:
         - Path=/dslrecherche/**
        filters:
          - KeyCloakFilter=requiredRole,service_read
          - RemoveRequestHeader=Authorization    
          - BasicAuthFilter=${MK_USER},${MK_PASS}
          - RewritePath=/dslrecherche/(?<segment>.*), /kundenportal/$\{segment}
#camunda
      - id: camunda-rest-api
        uri: http://camundaengine:8080/engine-rest
        #uri: http://camunda.witcom-dev.services/engine-rest
        predicates:
         - Path=/camunda/**
        filters:
          - RewritePath=/camunda/(?<segment>.*), /engine-rest/$\{segment}
#httpbin
      - id: dummy-api
        uri: http://httpbin.org:80
        predicates:
         - Path=/get/**
        filters:
          #- KeyCloakFilter=requiredRole,rmdb-api-server:test-role
          #- AddRequestHeader=X-Some-Header, custom-header
          - CommandFilter
#mcp
      - id: mcp-default
        uri: ${application.mcp-config.base-url}
        predicates:
         - Path=/mcp/**
        filters:
         - name: KeycloakMcpFilter
           args:
             resource-id: mcp-resource-server
             role-work: super-work
             role-read: read
         - RewritePath=/mcp/(?<segment>.*), /$\{segment}
#command    
      - id: command-base
        uri: ${RMDB_BASEURL:http://localhost:8080/axis}
        predicates:
         - Path=/rmdb/api/rest/entity/campus/**,/rmdb/api/rest/entity/building/**,/rmdb/api/rest/entity/floor/**,/rmdb/api/rest/entity/room/**
        filters:
         - name: KeycloakCommandFilter
           args:
             resource-id: rmdb-resource-server
             role-work: base-work
             role-read: read
         - RewritePath=/rmdb/(?<segment>.*), /axis/$\{segment}
      - id: command-default
        uri: ${RMDB_BASEURL:http://localhost:8080/axis}
        predicates:
         - Path=/rmdb/**
        filters:
         - name: KeycloakCommandFilter
           args:
             resource-id: rmdb-resource-server
             role-work: super-work
             role-read: read             
         - RewritePath=/rmdb/(?<segment>.*), /axis/$\{segment}

application:
  command-config:
    base-url: ${RMDB_BASEURL:http://localhost:8080/axis}
    user: ${RMDB_USER}
    password: ${RMDB_PASSWORD}
    group: ${RMDB_GROUP}
    mandant: ${RMDB_MANDANT}
  keycloak-config:
    keycloak-realm-id: ${KEYCLOAK_REALM_ID:#{null}}
    keycloak-server-url: ${KEYCLOAK_SERVER_URL:#{null}}
  spl-config:
    spl-base-url: ${SPL_BASEURL:#{null}}
    spl-tenant: ${SPL_TENANT:}
    spl-user: ${SPL_USER:#{null}}
    spl-password: ${SPL_PASSWORD:#{null}} 
  mcp-config:
    base-url: ${MCP_BASEURL:#{null}} 
    user: ${MCP_USER:#{null}}
    password: ${MCP_PASSWORD:#{null}}

logging:
  level:
    ROOT: INFO
    org.springframework.cloud.config: DEBUG
    feign.Logger: DEBUG

server:
  port: 8082
