#spring.cloud.gateway.httpclient.ssl.use-insecure-trust-manager
#feign:
#  client:
#    config:
#      default:
#        logger-level: full
        
spring:
  data:
    redis:
      host: redis
      port: 6379

  cloud:
    consul:
      discovery:
        enabled: false
      port: 443
      scheme:  http                      
      config:
        enabled: false

    gateway:
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"          
      routes:
#service-planet default-tenant    
      - id: spl
        uri: ${application.spl-config.tenants[0].spl-base-url}/serviceplanet/remote/service
        predicates:
         - Path=/smdb/**
        filters:
#         - KeyCloakFilter=requiredRole,service_read
         - ServicePlanetFilter
         - RewritePath=/smdb/(?<segment>.*), /serviceplanet/remote/service/$\{segment}
#service-planet default-tenant    
      - id: spl-other-tenant
        uri: ${application.spl-config.tenants[0].spl-base-url}/serviceplanet/remote/service
        predicates:
         - Path=/smdb-tenant-2/**
        filters:
#         - KeyCloakFilter=requiredRole,service_read
         - name: ServicePlanetFilter
           args:
             tenant: TEST01
         - RewritePath=/smdb-tenant-2/(?<segment>.*), /serviceplanet/remote/service/$\{segment}
#service-planet default-tenant    
      - id: spl-different-tenant
        uri: ${application.spl-config.tenants[1].spl-base-url}/serviceplanet/remote/service
        predicates:
         - Path=/smdb-tenant-3/**
        filters:
#         - KeyCloakFilter=requiredRole,service_read
         - name: ServicePlanetFilter
           args:
             tenant: TEST02
         - RewritePath=/smdb-tenant-3/(?<segment>.*), /serviceplanet/remote/service/$\{segment}

#httpbin
      - id: dummy-api
        uri: http://httpbin.org:80
        predicates:
         - Path=/get/**
        filters:
          - KeyCloakFilter=requiredRole,rmdb-resource-server:base-work
          #- AddRequestHeader=X-Some-Header, custom-header
          #- CommandFilter
#mcp
      - id: mcp-default
        uri: ${application.mcp-config.base-url}
        predicates:
         - Path=/mcp/**
        filters:
         - name: KeycloakMcpFilter
           args:
             resource-id: mcp-resource-server
             role-work: super-work
             role-read: read
         - RewritePath=/mcp/(?<segment>.*), /$\{segment}

#command    
      - id: command-base
        uri: ${application.command-config.base-url}
        predicates:
         - Path=/rmdb/api/rest/entity/campus/**,/rmdb/api/rest/entity/building/**,/rmdb/api/rest/entity/floor/**,/rmdb/api/rest/entity/room/**
        filters:
         - name: KeycloakCommandFilter
           args:
             resource-id: rmdb-resource-server
             role-work: base-work
             role-read: read
         - RewritePath=/rmdb/(?<segment>.*), /axis/$\{segment}
      - id: command-default
        uri: ${application.command-config.base-url}
        predicates:
         - Path=/rmdb/**
        filters:
         - name: KeycloakCommandFilter
           args:
             resource-id: rmdb-resource-server
             role-work: super-work
             role-read: read             
         - RewritePath=/rmdb/(?<segment>.*), /axis/$\{segment}

application:
  command-config:
    enabled: false
    base-url: http://mockserver:1080/rmdb
    user: dummyuser
    password: dummypassword
    group: dummygroup
    mandant: dummymandant
  keycloak-config:
    keycloak-realm-id: devrealm
    keycloak-server-url: http://keycloak:9999
  spl-config:
    enabled: false
    tenants:
    - spl-base-url: http://mockserver:1080/smdb
      spl-user: dummyuser
      spl-password: dummypassword
      spl-tenant: tenant1
      tenant-name: TEST01
      default-tenant: true
    - spl-base-url: http://mockserver:1080/smdb
      spl-user: dummyuser
      spl-password: dummypassword
      spl-tenant: tenant2
      tenant-name: TEST02

  mcp-config:
    enabled: false
    base-url: http://mockserver:1080/mcp
    user: dummyuser
    password: dummypassword

logging:
  level:
    root: ERROR
    de.witcom: DEBUG
    org.springframework.cloud.config: DEBUG
    feign.Logger: DEBUG

server:
  port: 8080
