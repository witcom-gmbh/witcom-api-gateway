{
	"id": "15490c7c-3279-4535-84ce-917d67258773",
	"realm": "devrealm",
	"notBefore": 0,
	"defaultSignatureAlgorithm": "RS256",
	"revokeRefreshToken": false,
	"refreshTokenMaxReuse": 0,
	"accessTokenLifespan": 300,
	"accessTokenLifespanForImplicitFlow": 900,
	"ssoSessionIdleTimeout": 1800,
	"ssoSessionMaxLifespan": 36000,
	"ssoSessionIdleTimeoutRememberMe": 0,
	"ssoSessionMaxLifespanRememberMe": 0,
	"offlineSessionIdleTimeout": 2592000,
	"offlineSessionMaxLifespanEnabled": false,
	"offlineSessionMaxLifespan": 5184000,
	"clientSessionIdleTimeout": 0,
	"clientSessionMaxLifespan": 0,
	"clientOfflineSessionIdleTimeout": 0,
	"clientOfflineSessionMaxLifespan": 0,
	"accessCodeLifespan": 60,
	"accessCodeLifespanUserAction": 300,
	"accessCodeLifespanLogin": 1800,
	"actionTokenGeneratedByAdminLifespan": 43200,
	"actionTokenGeneratedByUserLifespan": 300,
	"oauth2DeviceCodeLifespan": 600,
	"oauth2DevicePollingInterval": 5,
	"enabled": true,
	"sslRequired": "external",
	"registrationAllowed": false,
	"registrationEmailAsUsername": false,
	"rememberMe": false,
	"verifyEmail": false,
	"loginWithEmailAllowed": true,
	"duplicateEmailsAllowed": false,
	"resetPasswordAllowed": false,
	"editUsernameAllowed": false,
	"bruteForceProtected": false,
	"permanentLockout": false,
	"maxFailureWaitSeconds": 900,
	"minimumQuickLoginWaitSeconds": 60,
	"waitIncrementSeconds": 60,
	"quickLoginCheckMilliSeconds": 1000,
	"maxDeltaTimeSeconds": 43200,
	"failureFactor": 30,
	"roles": {
	  "realm": [
		{
		  "id": "69e49a8b-511a-429e-b829-f61575a7ae94",
		  "name": "offline_access",
		  "description": "${role_offline-access}",
		  "composite": false,
		  "clientRole": false,
		  "containerId": "15490c7c-3279-4535-84ce-917d67258773",
		  "attributes": {}
		},
		{
		  "id": "6e5aca69-d36a-4940-9401-440f1ddfa0f8",
		  "name": "default-roles-devrealm",
		  "description": "${role_default-roles}",
		  "composite": true,
		  "composites": {
			"realm": [
			  "offline_access",
			  "uma_authorization"
			],
			"client": {
			  "account": [
				"manage-account",
				"view-profile"
			  ]
			}
		  },
		  "clientRole": false,
		  "containerId": "15490c7c-3279-4535-84ce-917d67258773",
		  "attributes": {}
		},
		{
		  "id": "f6ef5f1c-e909-4e4d-acf4-c0d3748f1d54",
		  "name": "uma_authorization",
		  "description": "${role_uma_authorization}",
		  "composite": false,
		  "clientRole": false,
		  "containerId": "15490c7c-3279-4535-84ce-917d67258773",
		  "attributes": {}
		}
	  ],
	  "client": {
		"rmdb-resource-server": [
		  {
			"id": "5b4bdcdf-18e1-4209-b32c-b8293e358782",
			"name": "super-work",
			"description": "",
			"composite": false,
			"clientRole": true,
			"containerId": "b30905be-7267-4eb8-b1ff-ec53f81993f6",
			"attributes": {}
		  },
		  {
			"id": "7528e674-4a69-4a1b-b226-617b66a467f4",
			"name": "base-work",
			"description": "",
			"composite": false,
			"clientRole": true,
			"containerId": "b30905be-7267-4eb8-b1ff-ec53f81993f6",
			"attributes": {}
		  },
		  {
			"id": "9cca9347-7ca7-447b-953c-d1602da93e15",
			"name": "read",
			"description": "",
			"composite": false,
			"clientRole": true,
			"containerId": "b30905be-7267-4eb8-b1ff-ec53f81993f6",
			"attributes": {}
		  }
		],
		"realm-management": [
		  {
			"id": "1ccfc779-7e4a-423d-a3af-85fe8fd3e081",
			"name": "impersonation",
			"description": "${role_impersonation}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "bb734b9a-3e1f-4358-b6e0-404164bae0a0",
			"name": "query-groups",
			"description": "${role_query-groups}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "2c1dce07-e90f-48e1-970e-c647d52073ef",
			"name": "manage-realm",
			"description": "${role_manage-realm}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "f19743fe-ffa3-4e93-af90-106fc03f4a55",
			"name": "view-events",
			"description": "${role_view-events}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "b89eec43-da11-4206-bc38-427b0bf5ae83",
			"name": "manage-authorization",
			"description": "${role_manage-authorization}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "7cf51720-c1f4-445a-8ac0-cb70e040e3fb",
			"name": "manage-clients",
			"description": "${role_manage-clients}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "2bf964ad-3a20-4664-8def-ca7e98986a48",
			"name": "query-users",
			"description": "${role_query-users}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "cfd6d653-03cf-4e46-8fd2-3daff4946a45",
			"name": "view-realm",
			"description": "${role_view-realm}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "ceb4a563-e945-4847-84fe-b0e6417e2153",
			"name": "view-clients",
			"description": "${role_view-clients}",
			"composite": true,
			"composites": {
			  "client": {
				"realm-management": [
				  "query-clients"
				]
			  }
			},
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "c4d4bbea-7b82-4593-a2c2-afae420a9c4f",
			"name": "manage-events",
			"description": "${role_manage-events}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "dbfe3726-bf6c-4002-bc60-495368f55cd9",
			"name": "view-users",
			"description": "${role_view-users}",
			"composite": true,
			"composites": {
			  "client": {
				"realm-management": [
				  "query-groups",
				  "query-users"
				]
			  }
			},
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "5278bda9-0ddf-4265-a5b5-b89793a8111b",
			"name": "create-client",
			"description": "${role_create-client}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "df3e8c2a-ea05-4135-bb14-767e4a6c5996",
			"name": "manage-identity-providers",
			"description": "${role_manage-identity-providers}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "c05c36f7-a80f-4b96-90d5-9b995b18d939",
			"name": "query-realms",
			"description": "${role_query-realms}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "56ac58bc-81aa-41fb-97b5-4e9a07bdcfe6",
			"name": "manage-users",
			"description": "${role_manage-users}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "40d5f8af-d381-483a-995b-90a62a617041",
			"name": "view-identity-providers",
			"description": "${role_view-identity-providers}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "e1a7ed5f-3a70-4aab-8de5-bc12dcb415b2",
			"name": "realm-admin",
			"description": "${role_realm-admin}",
			"composite": true,
			"composites": {
			  "client": {
				"realm-management": [
				  "impersonation",
				  "query-groups",
				  "manage-realm",
				  "view-events",
				  "manage-clients",
				  "manage-authorization",
				  "query-users",
				  "view-realm",
				  "view-clients",
				  "manage-events",
				  "view-users",
				  "create-client",
				  "query-realms",
				  "manage-identity-providers",
				  "manage-users",
				  "view-identity-providers",
				  "view-authorization",
				  "query-clients"
				]
			  }
			},
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "d210ead1-193f-4695-a438-c1dbfc3145ad",
			"name": "view-authorization",
			"description": "${role_view-authorization}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  },
		  {
			"id": "4a682dbd-1203-4476-9021-6ea2e3697878",
			"name": "query-clients",
			"description": "${role_query-clients}",
			"composite": false,
			"clientRole": true,
			"containerId": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
			"attributes": {}
		  }
		],
		"security-admin-console": [],
		"admin-cli": [],
		"mcp-resource-server": [
		  {
			"id": "ed784ee0-6ec1-464e-88c7-2abb3b6b7cbf",
			"name": "read",
			"description": "",
			"composite": false,
			"clientRole": true,
			"containerId": "2a4dc6ee-ad74-4ed5-b4e2-0f8e4cd92927",
			"attributes": {}
		  },
		  {
			"id": "b399ed21-8ed6-400b-a316-cb3b0f832280",
			"name": "super-work",
			"description": "",
			"composite": false,
			"clientRole": true,
			"containerId": "2a4dc6ee-ad74-4ed5-b4e2-0f8e4cd92927",
			"attributes": {}
		  }
		],
		"account-console": [],
		"${API_GW_OAUTH_TESTCLIENT_CLIENTID}": [],
		"broker": [
		  {
			"id": "36afac83-b92a-4101-89da-76d495f610dc",
			"name": "read-token",
			"description": "${role_read-token}",
			"composite": false,
			"clientRole": true,
			"containerId": "6064179b-2873-45be-9563-a9d60486883e",
			"attributes": {}
		  }
		],
		"account": [
		  {
			"id": "95341fff-b6ec-4d23-82d8-357dbfd2fa7d",
			"name": "view-consent",
			"description": "${role_view-consent}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "622abf49-8737-4055-9153-33b05057d754",
			"name": "manage-account-links",
			"description": "${role_manage-account-links}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "106f436c-9c6f-4ece-a899-c89aa86f2977",
			"name": "delete-account",
			"description": "${role_delete-account}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "a98ebb36-0915-4034-a765-fc67973df25c",
			"name": "manage-consent",
			"description": "${role_manage-consent}",
			"composite": true,
			"composites": {
			  "client": {
				"account": [
				  "view-consent"
				]
			  }
			},
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "8b8a46e4-dedb-4047-ad44-735e22af515e",
			"name": "view-applications",
			"description": "${role_view-applications}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "9c0e7aae-85ba-4361-b4d8-a94762658ab7",
			"name": "manage-account",
			"description": "${role_manage-account}",
			"composite": true,
			"composites": {
			  "client": {
				"account": [
				  "manage-account-links"
				]
			  }
			},
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "4c716d55-6833-497e-84a0-b092ec1cb22f",
			"name": "view-groups",
			"description": "${role_view-groups}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  },
		  {
			"id": "993e1949-2a2d-4412-90c6-4458e2c16daf",
			"name": "view-profile",
			"description": "${role_view-profile}",
			"composite": false,
			"clientRole": true,
			"containerId": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
			"attributes": {}
		  }
		]
	  }
	},
	"groups": [],
	"defaultRole": {
	  "id": "6e5aca69-d36a-4940-9401-440f1ddfa0f8",
	  "name": "default-roles-devrealm",
	  "description": "${role_default-roles}",
	  "composite": true,
	  "clientRole": false,
	  "containerId": "15490c7c-3279-4535-84ce-917d67258773"
	},
	"requiredCredentials": [
	  "password"
	],
	"otpPolicyType": "totp",
	"otpPolicyAlgorithm": "HmacSHA1",
	"otpPolicyInitialCounter": 0,
	"otpPolicyDigits": 6,
	"otpPolicyLookAheadWindow": 1,
	"otpPolicyPeriod": 30,
	"otpPolicyCodeReusable": false,
	"otpSupportedApplications": [
	  "totpAppGoogleName",
	  "totpAppFreeOTPName",
	  "totpAppMicrosoftAuthenticatorName"
	],
	"webAuthnPolicyRpEntityName": "keycloak",
	"webAuthnPolicySignatureAlgorithms": [
	  "ES256"
	],
	"webAuthnPolicyRpId": "",
	"webAuthnPolicyAttestationConveyancePreference": "not specified",
	"webAuthnPolicyAuthenticatorAttachment": "not specified",
	"webAuthnPolicyRequireResidentKey": "not specified",
	"webAuthnPolicyUserVerificationRequirement": "not specified",
	"webAuthnPolicyCreateTimeout": 0,
	"webAuthnPolicyAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyAcceptableAaguids": [],
	"webAuthnPolicyPasswordlessRpEntityName": "keycloak",
	"webAuthnPolicyPasswordlessSignatureAlgorithms": [
	  "ES256"
	],
	"webAuthnPolicyPasswordlessRpId": "",
	"webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
	"webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
	"webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
	"webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
	"webAuthnPolicyPasswordlessCreateTimeout": 0,
	"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyPasswordlessAcceptableAaguids": [],
	"users": [
	  {
		"id": "169e531a-749d-4969-a076-0433f990b06f",
		"createdTimestamp": 1704465875380,
		"username": "service-account-${API_GW_OAUTH_TESTCLIENT_CLIENTID}",
		"enabled": true,
		"totp": false,
		"emailVerified": false,
		"serviceAccountClientId": "${API_GW_OAUTH_TESTCLIENT_CLIENTID}",
		"disableableCredentialTypes": [],
		"requiredActions": [],
		"realmRoles": [
		  "default-roles-devrealm"
		],
		"clientRoles": {
		  "rmdb-resource-server": [
			"super-work",
			"base-work",
			"read"
		  ],
		  "mcp-resource-server": [
			"read",
			"super-work"
		  ]
		},
		"notBefore": 0,
		"groups": []
	  }
	],
	"scopeMappings": [
	  {
		"clientScope": "offline_access",
		"roles": [
		  "offline_access"
		]
	  }
	],
	"clientScopeMappings": {
	  "account": [
		{
		  "client": "account-console",
		  "roles": [
			"manage-account",
			"view-groups"
		  ]
		}
	  ]
	},
	"clients": [
	  {
		"id": "18d0bdff-ccbc-4ed7-941d-a85e56b1b0f0",
		"clientId": "account",
		"name": "${client_account}",
		"rootUrl": "${authBaseUrl}",
		"baseUrl": "/realms/devrealm/account/",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [
		  "/realms/devrealm/account/*"
		],
		"webOrigins": [],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": true,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {
		  "post.logout.redirect.uris": "+"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "c1006c6e-dc20-4568-ab57-e80c7f25365d",
		"clientId": "account-console",
		"name": "${client_account-console}",
		"rootUrl": "${authBaseUrl}",
		"baseUrl": "/realms/devrealm/account/",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [
		  "/realms/devrealm/account/*"
		],
		"webOrigins": [],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": true,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {
		  "post.logout.redirect.uris": "+",
		  "pkce.code.challenge.method": "S256"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"protocolMappers": [
		  {
			"id": "697f7479-e914-4bdf-9cfd-ad3980efdbe8",
			"name": "audience resolve",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-audience-resolve-mapper",
			"consentRequired": false,
			"config": {}
		  }
		],
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "78218701-97af-4bec-b3a6-6f32fa2d7b38",
		"clientId": "admin-cli",
		"name": "${client_admin-cli}",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [],
		"webOrigins": [],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": false,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": true,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "ae3ea5cf-e86b-40bc-ab76-1dd228fb73db",
		"clientId": "${API_GW_OAUTH_TESTCLIENT_CLIENTID}",
		"name": "",
		"description": "",
		"rootUrl": "",
		"adminUrl": "",
		"baseUrl": "",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"secret": "${API_GW_OAUTH_TESTCLIENT_CLIENTSECRET}",
		"redirectUris": [
		  "/*"
		],
		"webOrigins": [
		  "/*"
		],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": false,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": true,
		"publicClient": false,
		"frontchannelLogout": true,
		"protocol": "openid-connect",
		"attributes": {
		  "oidc.ciba.grant.enabled": "false",
		  "oauth2.device.authorization.grant.enabled": "false",
		  "client.secret.creation.time": "1704465875",
		  "backchannel.logout.session.required": "true",
		  "backchannel.logout.revoke.offline.tokens": "false"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": true,
		"nodeReRegistrationTimeout": -1,
		"protocolMappers": [
		  {
			"id": "d42790ed-7fb8-492c-a12e-f95dbc4ade2d",
			"name": "Client IP Address",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usersessionmodel-note-mapper",
			"consentRequired": false,
			"config": {
			  "user.session.note": "clientAddress",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "clientAddress",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "536f483d-805d-422b-8f51-1d1791673e61",
			"name": "Client Host",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usersessionmodel-note-mapper",
			"consentRequired": false,
			"config": {
			  "user.session.note": "clientHost",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "clientHost",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "506eb148-488b-4844-b51a-6b16e00d0c9e",
			"name": "Client ID",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usersessionmodel-note-mapper",
			"consentRequired": false,
			"config": {
			  "user.session.note": "client_id",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "client_id",
			  "jsonType.label": "String"
			}
		  }
		],
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "6064179b-2873-45be-9563-a9d60486883e",
		"clientId": "broker",
		"name": "${client_broker}",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [],
		"webOrigins": [],
		"notBefore": 0,
		"bearerOnly": true,
		"consentRequired": false,
		"standardFlowEnabled": true,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": false,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "2a4dc6ee-ad74-4ed5-b4e2-0f8e4cd92927",
		"clientId": "mcp-resource-server",
		"name": "",
		"description": "",
		"rootUrl": "",
		"adminUrl": "",
		"baseUrl": "",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [
		  "/*"
		],
		"webOrigins": [
		  "/*"
		],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": false,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": true,
		"protocol": "openid-connect",
		"attributes": {
		  "oidc.ciba.grant.enabled": "false",
		  "oauth2.device.authorization.grant.enabled": "false",
		  "backchannel.logout.session.required": "true",
		  "backchannel.logout.revoke.offline.tokens": "false"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": true,
		"nodeReRegistrationTimeout": -1,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "ae33087d-58c0-4b07-ada2-d30ae53bf36d",
		"clientId": "realm-management",
		"name": "${client_realm-management}",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [],
		"webOrigins": [],
		"notBefore": 0,
		"bearerOnly": true,
		"consentRequired": false,
		"standardFlowEnabled": true,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": false,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "b30905be-7267-4eb8-b1ff-ec53f81993f6",
		"clientId": "rmdb-resource-server",
		"name": "",
		"description": "",
		"rootUrl": "",
		"adminUrl": "",
		"baseUrl": "",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [
		  "/*"
		],
		"webOrigins": [
		  "/*"
		],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": false,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": true,
		"protocol": "openid-connect",
		"attributes": {
		  "oidc.ciba.grant.enabled": "false",
		  "oauth2.device.authorization.grant.enabled": "false",
		  "backchannel.logout.session.required": "true",
		  "backchannel.logout.revoke.offline.tokens": "false"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": true,
		"nodeReRegistrationTimeout": -1,
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  },
	  {
		"id": "b5d2549d-ae1a-4664-9f8a-760e2a08013f",
		"clientId": "security-admin-console",
		"name": "${client_security-admin-console}",
		"rootUrl": "${authAdminUrl}",
		"baseUrl": "/admin/devrealm/console/",
		"surrogateAuthRequired": false,
		"enabled": true,
		"alwaysDisplayInConsole": false,
		"clientAuthenticatorType": "client-secret",
		"redirectUris": [
		  "/admin/devrealm/console/*"
		],
		"webOrigins": [
		  "+"
		],
		"notBefore": 0,
		"bearerOnly": false,
		"consentRequired": false,
		"standardFlowEnabled": true,
		"implicitFlowEnabled": false,
		"directAccessGrantsEnabled": false,
		"serviceAccountsEnabled": false,
		"publicClient": true,
		"frontchannelLogout": false,
		"protocol": "openid-connect",
		"attributes": {
		  "post.logout.redirect.uris": "+",
		  "pkce.code.challenge.method": "S256"
		},
		"authenticationFlowBindingOverrides": {},
		"fullScopeAllowed": false,
		"nodeReRegistrationTimeout": 0,
		"protocolMappers": [
		  {
			"id": "868a731d-f9a0-4e97-9c3a-4b25f1768e98",
			"name": "locale",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "locale",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "locale",
			  "jsonType.label": "String"
			}
		  }
		],
		"defaultClientScopes": [
		  "web-origins",
		  "acr",
		  "profile",
		  "roles",
		  "email"
		],
		"optionalClientScopes": [
		  "address",
		  "phone",
		  "offline_access",
		  "microprofile-jwt"
		]
	  }
	],
	"clientScopes": [
	  {
		"id": "78cb34a6-8f52-4578-b2ce-91bcd49fe67d",
		"name": "microprofile-jwt",
		"description": "Microprofile - JWT built-in scope",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "true",
		  "display.on.consent.screen": "false"
		},
		"protocolMappers": [
		  {
			"id": "1d86eb6d-d3ea-45fa-842c-30f3af5af527",
			"name": "groups",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-realm-role-mapper",
			"consentRequired": false,
			"config": {
			  "multivalued": "true",
			  "user.attribute": "foo",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "groups",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "a8167054-c224-495d-9f3c-fcac582ac1e1",
			"name": "upn",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "username",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "upn",
			  "jsonType.label": "String"
			}
		  }
		]
	  },
	  {
		"id": "030ff2fc-7b52-419c-9857-6e5e9703458d",
		"name": "offline_access",
		"description": "OpenID Connect built-in scope: offline_access",
		"protocol": "openid-connect",
		"attributes": {
		  "consent.screen.text": "${offlineAccessScopeConsentText}",
		  "display.on.consent.screen": "true"
		}
	  },
	  {
		"id": "8bcb88c3-c8b9-4224-8ef8-182e0f32f17e",
		"name": "web-origins",
		"description": "OpenID Connect scope for add allowed web origins to the access token",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "false",
		  "display.on.consent.screen": "false",
		  "consent.screen.text": ""
		},
		"protocolMappers": [
		  {
			"id": "3554aec7-e99a-406d-81a6-c27eedea9bbd",
			"name": "allowed web origins",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-allowed-origins-mapper",
			"consentRequired": false,
			"config": {}
		  }
		]
	  },
	  {
		"id": "cb0b42f1-5d8f-41ff-82dd-78ec2c6a873c",
		"name": "role_list",
		"description": "SAML role list",
		"protocol": "saml",
		"attributes": {
		  "consent.screen.text": "${samlRoleListScopeConsentText}",
		  "display.on.consent.screen": "true"
		},
		"protocolMappers": [
		  {
			"id": "da6b4275-d7d4-433f-a187-e4ee0bf24a39",
			"name": "role list",
			"protocol": "saml",
			"protocolMapper": "saml-role-list-mapper",
			"consentRequired": false,
			"config": {
			  "single": "false",
			  "attribute.nameformat": "Basic",
			  "attribute.name": "Role"
			}
		  }
		]
	  },
	  {
		"id": "ec9ab6c3-5c1d-4455-84d8-b73c86dc0d5a",
		"name": "profile",
		"description": "OpenID Connect built-in scope: profile",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "true",
		  "display.on.consent.screen": "true",
		  "consent.screen.text": "${profileScopeConsentText}"
		},
		"protocolMappers": [
		  {
			"id": "d7509f94-c00b-4d3f-95a7-3b3a9d15bd04",
			"name": "zoneinfo",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "zoneinfo",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "zoneinfo",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "1743a642-339b-4082-bfdf-f8ae3cf9a66b",
			"name": "given name",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "firstName",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "given_name",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "25300459-4386-436b-95d2-e292d2be282a",
			"name": "middle name",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "middleName",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "middle_name",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "553aeddd-f43d-4bb2-bd05-49710c7c4a85",
			"name": "birthdate",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "birthdate",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "birthdate",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "80e4e00a-07ac-42d1-8d8b-fd9249d14d78",
			"name": "username",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "username",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "preferred_username",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "cfdce10d-2ec8-4bea-824a-1986e8986158",
			"name": "picture",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "picture",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "picture",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "5498945c-0d4d-4be3-8815-87427739de94",
			"name": "family name",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "lastName",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "family_name",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "de29aef9-03f7-4ee3-a390-274eaeedabd4",
			"name": "profile",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "profile",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "profile",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "a54e4705-9b5a-4c6f-a5f5-5cde76e31936",
			"name": "updated at",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "updatedAt",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "updated_at",
			  "jsonType.label": "long"
			}
		  },
		  {
			"id": "63bff691-c7e9-4cd1-a6b5-e929a00e1fbf",
			"name": "nickname",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "nickname",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "nickname",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "eda520ec-ded6-455a-9972-ec35830aae10",
			"name": "locale",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "locale",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "locale",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "29b7ff09-0105-48cc-93fb-e93c8c653871",
			"name": "gender",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "gender",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "gender",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "fe410331-d37e-4230-9252-6f2537b04ab4",
			"name": "website",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "website",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "website",
			  "jsonType.label": "String"
			}
		  },
		  {
			"id": "71a61d9e-1a1d-4e7c-a301-a679aafb81f0",
			"name": "full name",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-full-name-mapper",
			"consentRequired": false,
			"config": {
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "userinfo.token.claim": "true"
			}
		  }
		]
	  },
	  {
		"id": "a97d3208-e6bc-47a0-8b08-d84685b1c21c",
		"name": "phone",
		"description": "OpenID Connect built-in scope: phone",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "true",
		  "display.on.consent.screen": "true",
		  "consent.screen.text": "${phoneScopeConsentText}"
		},
		"protocolMappers": [
		  {
			"id": "97e263f0-a8d4-4c50-b220-bae052f04439",
			"name": "phone number verified",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "phoneNumberVerified",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "phone_number_verified",
			  "jsonType.label": "boolean"
			}
		  },
		  {
			"id": "7fd052e9-a2a4-4090-a772-b3f0c121ace9",
			"name": "phone number",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-attribute-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "phoneNumber",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "phone_number",
			  "jsonType.label": "String"
			}
		  }
		]
	  },
	  {
		"id": "a56d1c16-e6b0-4a5d-9ed9-af3ff0c5cb19",
		"name": "acr",
		"description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "false",
		  "display.on.consent.screen": "false"
		},
		"protocolMappers": [
		  {
			"id": "e0684711-c568-463f-ade6-83af5a3df5b9",
			"name": "acr loa level",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-acr-mapper",
			"consentRequired": false,
			"config": {
			  "id.token.claim": "true",
			  "access.token.claim": "true"
			}
		  }
		]
	  },
	  {
		"id": "06b97f22-865a-4431-aec6-c6e1c695d872",
		"name": "roles",
		"description": "OpenID Connect scope for add user roles to the access token",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "false",
		  "display.on.consent.screen": "true",
		  "consent.screen.text": "${rolesScopeConsentText}"
		},
		"protocolMappers": [
		  {
			"id": "6e7993a3-223d-41b9-b4ff-746585cc1adc",
			"name": "client roles",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-client-role-mapper",
			"consentRequired": false,
			"config": {
			  "user.attribute": "foo",
			  "access.token.claim": "true",
			  "claim.name": "resource_access.${client_id}.roles",
			  "jsonType.label": "String",
			  "multivalued": "true"
			}
		  },
		  {
			"id": "967be9d2-81fd-4e4c-99a6-3aa57bcd52f7",
			"name": "realm roles",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-realm-role-mapper",
			"consentRequired": false,
			"config": {
			  "user.attribute": "foo",
			  "access.token.claim": "true",
			  "claim.name": "realm_access.roles",
			  "jsonType.label": "String",
			  "multivalued": "true"
			}
		  },
		  {
			"id": "80055fb9-c004-4325-951a-5501128d5d64",
			"name": "audience resolve",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-audience-resolve-mapper",
			"consentRequired": false,
			"config": {}
		  }
		]
	  },
	  {
		"id": "2dfc7fe3-af38-4a7e-8dcc-155a36478f32",
		"name": "email",
		"description": "OpenID Connect built-in scope: email",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "true",
		  "display.on.consent.screen": "true",
		  "consent.screen.text": "${emailScopeConsentText}"
		},
		"protocolMappers": [
		  {
			"id": "6c4116bc-1c01-4569-a4d3-22c4f67f3555",
			"name": "email verified",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "emailVerified",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "email_verified",
			  "jsonType.label": "boolean"
			}
		  },
		  {
			"id": "b03d65ab-89cc-4c98-ab3b-58697d0a076a",
			"name": "email",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-usermodel-property-mapper",
			"consentRequired": false,
			"config": {
			  "userinfo.token.claim": "true",
			  "user.attribute": "email",
			  "id.token.claim": "true",
			  "access.token.claim": "true",
			  "claim.name": "email",
			  "jsonType.label": "String"
			}
		  }
		]
	  },
	  {
		"id": "ad7e5d4f-7652-4e99-9769-dd59095f3a6a",
		"name": "address",
		"description": "OpenID Connect built-in scope: address",
		"protocol": "openid-connect",
		"attributes": {
		  "include.in.token.scope": "true",
		  "display.on.consent.screen": "true",
		  "consent.screen.text": "${addressScopeConsentText}"
		},
		"protocolMappers": [
		  {
			"id": "6559f3e1-bd7b-42c5-b5a5-d74cacdf3669",
			"name": "address",
			"protocol": "openid-connect",
			"protocolMapper": "oidc-address-mapper",
			"consentRequired": false,
			"config": {
			  "user.attribute.formatted": "formatted",
			  "user.attribute.country": "country",
			  "user.attribute.postal_code": "postal_code",
			  "userinfo.token.claim": "true",
			  "user.attribute.street": "street",
			  "id.token.claim": "true",
			  "user.attribute.region": "region",
			  "access.token.claim": "true",
			  "user.attribute.locality": "locality"
			}
		  }
		]
	  }
	],
	"defaultDefaultClientScopes": [
	  "role_list",
	  "profile",
	  "email",
	  "roles",
	  "web-origins",
	  "acr"
	],
	"defaultOptionalClientScopes": [
	  "offline_access",
	  "address",
	  "phone",
	  "microprofile-jwt"
	],
	"browserSecurityHeaders": {
	  "contentSecurityPolicyReportOnly": "",
	  "xContentTypeOptions": "nosniff",
	  "xRobotsTag": "none",
	  "xFrameOptions": "SAMEORIGIN",
	  "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
	  "xXSSProtection": "1; mode=block",
	  "strictTransportSecurity": "max-age=31536000; includeSubDomains"
	},
	"smtpServer": {},
	"eventsEnabled": false,
	"eventsListeners": [
	  "jboss-logging"
	],
	"enabledEventTypes": [],
	"adminEventsEnabled": false,
	"adminEventsDetailsEnabled": false,
	"identityProviders": [],
	"identityProviderMappers": [],
	"components": {
	  "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
		{
		  "id": "af85cb8c-7d0a-455c-9c2d-91c9f48cae6d",
		  "name": "Consent Required",
		  "providerId": "consent-required",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {}
		},
		{
		  "id": "3f3850a7-1ef3-4a1f-8735-bde95aa21122",
		  "name": "Max Clients Limit",
		  "providerId": "max-clients",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {
			"max-clients": [
			  "200"
			]
		  }
		},
		{
		  "id": "49b212da-e392-4652-bc22-974a01a8ca58",
		  "name": "Allowed Client Scopes",
		  "providerId": "allowed-client-templates",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {
			"allow-default-scopes": [
			  "true"
			]
		  }
		},
		{
		  "id": "da9a4aa9-b1b3-4612-9adc-44baba28f429",
		  "name": "Allowed Protocol Mapper Types",
		  "providerId": "allowed-protocol-mappers",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {
			"allowed-protocol-mapper-types": [
			  "oidc-sha256-pairwise-sub-mapper",
			  "oidc-usermodel-property-mapper",
			  "saml-user-property-mapper",
			  "oidc-address-mapper",
			  "oidc-usermodel-attribute-mapper",
			  "oidc-full-name-mapper",
			  "saml-user-attribute-mapper",
			  "saml-role-list-mapper"
			]
		  }
		},
		{
		  "id": "749a13fb-b860-4b6b-9d36-d59ebcb09fc7",
		  "name": "Allowed Client Scopes",
		  "providerId": "allowed-client-templates",
		  "subType": "authenticated",
		  "subComponents": {},
		  "config": {
			"allow-default-scopes": [
			  "true"
			]
		  }
		},
		{
		  "id": "603fc9ab-c37d-44c4-bdc9-2f9320b4a236",
		  "name": "Trusted Hosts",
		  "providerId": "trusted-hosts",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {
			"host-sending-registration-request-must-match": [
			  "true"
			],
			"client-uris-must-match": [
			  "true"
			]
		  }
		},
		{
		  "id": "c41d51dc-ab8a-4b28-a2c4-49696cb3c608",
		  "name": "Allowed Protocol Mapper Types",
		  "providerId": "allowed-protocol-mappers",
		  "subType": "authenticated",
		  "subComponents": {},
		  "config": {
			"allowed-protocol-mapper-types": [
			  "oidc-sha256-pairwise-sub-mapper",
			  "saml-role-list-mapper",
			  "oidc-address-mapper",
			  "oidc-full-name-mapper",
			  "saml-user-property-mapper",
			  "saml-user-attribute-mapper",
			  "oidc-usermodel-property-mapper",
			  "oidc-usermodel-attribute-mapper"
			]
		  }
		},
		{
		  "id": "e45aecd7-4a5a-404e-a000-63c5195db586",
		  "name": "Full Scope Disabled",
		  "providerId": "scope",
		  "subType": "anonymous",
		  "subComponents": {},
		  "config": {}
		}
	  ],
	  "org.keycloak.keys.KeyProvider": [
		{
		  "id": "f0a4bf86-2a4d-4e90-8e74-a1189c6c65b9",
		  "name": "hmac-generated",
		  "providerId": "hmac-generated",
		  "subComponents": {},
		  "config": {
			"priority": [
			  "100"
			],
			"algorithm": [
			  "HS256"
			]
		  }
		},
		{
		  "id": "76623c44-80db-4c09-b9b4-78b1c857bb7e",
		  "name": "aes-generated",
		  "providerId": "aes-generated",
		  "subComponents": {},
		  "config": {
			"priority": [
			  "100"
			]
		  }
		},
		{
		  "id": "34cb2d90-6ecf-4f16-8813-b4e4062fa740",
		  "name": "rsa-generated",
		  "providerId": "rsa-generated",
		  "subComponents": {},
		  "config": {
			"priority": [
			  "100"
			]
		  }
		},
		{
		  "id": "90bb84ae-baa5-4e6c-8ab4-0f0a820c71f9",
		  "name": "rsa-enc-generated",
		  "providerId": "rsa-enc-generated",
		  "subComponents": {},
		  "config": {
			"priority": [
			  "100"
			],
			"algorithm": [
			  "RSA-OAEP"
			]
		  }
		}
	  ]
	},
	"internationalizationEnabled": false,
	"supportedLocales": [],
	"authenticationFlows": [
	  {
		"id": "e3059d50-314c-4f0e-994b-fccb781458bd",
		"alias": "Account verification options",
		"description": "Method with which to verity the existing account",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "idp-email-verification",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "ALTERNATIVE",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "Verify Existing Account by Re-authentication",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "2772723d-c2f5-4862-9686-8e95c2300622",
		"alias": "Authentication Options",
		"description": "Authentication options.",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "basic-auth",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "basic-auth-otp",
			"authenticatorFlow": false,
			"requirement": "DISABLED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "auth-spnego",
			"authenticatorFlow": false,
			"requirement": "DISABLED",
			"priority": 30,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "9ed9f9f3-7ed4-4277-b28c-6c59126deafc",
		"alias": "Browser - Conditional OTP",
		"description": "Flow to determine if the OTP is required for the authentication",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "conditional-user-configured",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "auth-otp-form",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "8a17a1c2-921b-48b7-8387-f2fba38087ad",
		"alias": "Direct Grant - Conditional OTP",
		"description": "Flow to determine if the OTP is required for the authentication",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "conditional-user-configured",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "direct-grant-validate-otp",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "892d3e52-f82d-4409-a2e5-27988e1fcabb",
		"alias": "First broker login - Conditional OTP",
		"description": "Flow to determine if the OTP is required for the authentication",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "conditional-user-configured",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "auth-otp-form",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "5865238a-ffaa-4b2b-8ebd-790e842a42f2",
		"alias": "Handle Existing Account",
		"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "idp-confirm-link",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "Account verification options",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "1e00d791-7e29-481a-bbe0-5e1ed9d99d32",
		"alias": "Reset - Conditional OTP",
		"description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "conditional-user-configured",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "reset-otp",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "31f87513-7e8c-4e60-851a-0ea7507a89dd",
		"alias": "User creation or linking",
		"description": "Flow for the existing/non-existing user alternatives",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticatorConfig": "create unique user config",
			"authenticator": "idp-create-user-if-unique",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "ALTERNATIVE",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "Handle Existing Account",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "5f6eb0ed-6b47-4f67-99c4-2af47c339049",
		"alias": "Verify Existing Account by Re-authentication",
		"description": "Reauthentication of existing account",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "idp-username-password-form",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "CONDITIONAL",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "First broker login - Conditional OTP",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "2c76a726-e1d9-44b2-9c4e-48ba590cc3cf",
		"alias": "browser",
		"description": "browser based authentication",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "auth-cookie",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "auth-spnego",
			"authenticatorFlow": false,
			"requirement": "DISABLED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "identity-provider-redirector",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 25,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "ALTERNATIVE",
			"priority": 30,
			"autheticatorFlow": true,
			"flowAlias": "forms",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "75e888f2-3b3f-46eb-b612-96c726d97bb9",
		"alias": "clients",
		"description": "Base authentication for clients",
		"providerId": "client-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "client-secret",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "client-jwt",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "client-secret-jwt",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 30,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "client-x509",
			"authenticatorFlow": false,
			"requirement": "ALTERNATIVE",
			"priority": 40,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "f2c7076e-8faa-4275-82f4-aaaafb6a8548",
		"alias": "direct grant",
		"description": "OpenID Connect Resource Owner Grant",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "direct-grant-validate-username",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "direct-grant-validate-password",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "CONDITIONAL",
			"priority": 30,
			"autheticatorFlow": true,
			"flowAlias": "Direct Grant - Conditional OTP",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "c3e1e89f-28ec-4acf-aae7-5c5b922ea08e",
		"alias": "docker auth",
		"description": "Used by Docker clients to authenticate against the IDP",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "docker-http-basic-authenticator",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "5853655e-c30f-4aaf-a7dc-7c39866dcd73",
		"alias": "first broker login",
		"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticatorConfig": "review profile config",
			"authenticator": "idp-review-profile",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "User creation or linking",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "c2a76c48-8c9f-4edf-86f7-fd561192e39a",
		"alias": "forms",
		"description": "Username, password, otp and other auth forms.",
		"providerId": "basic-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "auth-username-password-form",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "CONDITIONAL",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "Browser - Conditional OTP",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "daf0b470-3b4c-441a-a06a-7d46c2448f3f",
		"alias": "http challenge",
		"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "no-cookie-redirect",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": true,
			"flowAlias": "Authentication Options",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "622f07cd-3bce-4764-911d-ef6d8c1138cd",
		"alias": "registration",
		"description": "registration flow",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "registration-page-form",
			"authenticatorFlow": true,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": true,
			"flowAlias": "registration form",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "0d6af0c3-4f82-4d88-a5aa-86d397b34598",
		"alias": "registration form",
		"description": "registration form",
		"providerId": "form-flow",
		"topLevel": false,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "registration-user-creation",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "registration-profile-action",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 40,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "registration-password-action",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 50,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "registration-recaptcha-action",
			"authenticatorFlow": false,
			"requirement": "DISABLED",
			"priority": 60,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "aec94a8a-ef42-428c-b031-33b9d9e6be58",
		"alias": "reset credentials",
		"description": "Reset credentials for a user if they forgot their password or something",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "reset-credentials-choose-user",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "reset-credential-email",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 20,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticator": "reset-password",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 30,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  },
		  {
			"authenticatorFlow": true,
			"requirement": "CONDITIONAL",
			"priority": 40,
			"autheticatorFlow": true,
			"flowAlias": "Reset - Conditional OTP",
			"userSetupAllowed": false
		  }
		]
	  },
	  {
		"id": "5e1e810b-1cd5-4d7a-a0f6-7b8f3d4c08c9",
		"alias": "saml ecp",
		"description": "SAML ECP Profile Authentication Flow",
		"providerId": "basic-flow",
		"topLevel": true,
		"builtIn": true,
		"authenticationExecutions": [
		  {
			"authenticator": "http-basic-authenticator",
			"authenticatorFlow": false,
			"requirement": "REQUIRED",
			"priority": 10,
			"autheticatorFlow": false,
			"userSetupAllowed": false
		  }
		]
	  }
	],
	"authenticatorConfig": [
	  {
		"id": "35d36dab-fee6-4443-bde0-72f8a57772a9",
		"alias": "create unique user config",
		"config": {
		  "require.password.update.after.registration": "false"
		}
	  },
	  {
		"id": "03e58e24-2118-4d47-94c6-050395f8962c",
		"alias": "review profile config",
		"config": {
		  "update.profile.on.first.login": "missing"
		}
	  }
	],
	"requiredActions": [
	  {
		"alias": "CONFIGURE_TOTP",
		"name": "Configure OTP",
		"providerId": "CONFIGURE_TOTP",
		"enabled": true,
		"defaultAction": false,
		"priority": 10,
		"config": {}
	  },
	  {
		"alias": "TERMS_AND_CONDITIONS",
		"name": "Terms and Conditions",
		"providerId": "TERMS_AND_CONDITIONS",
		"enabled": false,
		"defaultAction": false,
		"priority": 20,
		"config": {}
	  },
	  {
		"alias": "UPDATE_PASSWORD",
		"name": "Update Password",
		"providerId": "UPDATE_PASSWORD",
		"enabled": true,
		"defaultAction": false,
		"priority": 30,
		"config": {}
	  },
	  {
		"alias": "UPDATE_PROFILE",
		"name": "Update Profile",
		"providerId": "UPDATE_PROFILE",
		"enabled": true,
		"defaultAction": false,
		"priority": 40,
		"config": {}
	  },
	  {
		"alias": "VERIFY_EMAIL",
		"name": "Verify Email",
		"providerId": "VERIFY_EMAIL",
		"enabled": true,
		"defaultAction": false,
		"priority": 50,
		"config": {}
	  },
	  {
		"alias": "delete_account",
		"name": "Delete Account",
		"providerId": "delete_account",
		"enabled": false,
		"defaultAction": false,
		"priority": 60,
		"config": {}
	  },
	  {
		"alias": "webauthn-register",
		"name": "Webauthn Register",
		"providerId": "webauthn-register",
		"enabled": true,
		"defaultAction": false,
		"priority": 70,
		"config": {}
	  },
	  {
		"alias": "webauthn-register-passwordless",
		"name": "Webauthn Register Passwordless",
		"providerId": "webauthn-register-passwordless",
		"enabled": true,
		"defaultAction": false,
		"priority": 80,
		"config": {}
	  },
	  {
		"alias": "update_user_locale",
		"name": "Update User Locale",
		"providerId": "update_user_locale",
		"enabled": true,
		"defaultAction": false,
		"priority": 1000,
		"config": {}
	  }
	],
	"browserFlow": "browser",
	"registrationFlow": "registration",
	"directGrantFlow": "direct grant",
	"resetCredentialsFlow": "reset credentials",
	"clientAuthenticationFlow": "clients",
	"dockerAuthenticationFlow": "docker auth",
	"attributes": {
	  "cibaBackchannelTokenDeliveryMode": "poll",
	  "cibaExpiresIn": "120",
	  "cibaAuthRequestedUserHint": "login_hint",
	  "oauth2DeviceCodeLifespan": "600",
	  "oauth2DevicePollingInterval": "5",
	  "parRequestUriLifespan": "60",
	  "cibaInterval": "5",
	  "realmReusableOtpCode": "false"
	},
	"keycloakVersion": "21.1.1",
	"userManagedAccessAllowed": false,
	"clientProfiles": {
	  "profiles": []
	},
	"clientPolicies": {
	  "policies": []
	}
  }